p6 <- hashAnswer %>% group_by(fsfat,hsta) %>% filter(fsfat>=0) %>%
summarise("fjoldi"=n_distinct(studentId)) %>%
ggplot(aes(x=fsfat,y=fjoldi,color=hsta))+
geom_line(show.legend = FALSE)
p6
grid.arrange(p5,p6,nrow=1)
#Skoðum aðeins fjölda nemenda, og nemenda eftir fyrirlestri
hashAnswer %>% summarise(n_distinct(studentId))
hashAnswer %>% group_by(lectureId) %>% summarise(studentId)
hashAnswer %>% group_by(lectureId) %>% summarise(n_distinct(studentId))
library(lubridate)
library(dbplyr)
library(dplyr)
library(RMySQL)
library(tidyr)
library(MASS)
library(ggplot2)
library(magrittr)
library(lubridate)
#les inn öll gögninn, nota mestalagi bara answer gagnasafnið
twDb<-src_mysql("tw_quizdb", host = "127.0.0.1", port = 3306, user = "gss24", password = "JuwofKWT2Ewc")
answer<-tbl(twDb,"answer")
question<-tbl(twDb,"question")
#hashes<-read.csv("Data/bighashfile.txt",sep=" ",col.names = c("dir","qName","hash","numQ","notaType"))
hashes<-read.csv("Data/bighashfile.wide.txt",sep=" ",col.names = c("dir","qName","hash","hash2","hash3","numQ","notaType"),na.strings = ".")
#pathQ<-unique(paste(hashes$dir,hashes$qName,sep=""))
plonePath<-unique(paste(hashes$dir,hashes$qName,sep=""))
plonePath<-as.data.frame(plonePath)
hashes$plonePath<-paste(hashes$dir,hashes$qName,sep="")
left_join(plonePath,as.data.frame(question))->myQuestions
#question%>%filter(plonePath%in%pathQ)->myQuestions
#myQuestions<-as.data.frame(myQuestions)
answer%>%filter(timeStart>"2020-01-01 00:01:01")->answerRed
answerRed<-as.data.frame(answerRed)
inner_join(answerRed,myQuestions) -> myAnswer
MyAnswer<-as.data.frame(myAnswer)
#Set inn fjöldi svara framAd Thessu og hefséð áður
MyAnswer <- MyAnswer[order(MyAnswer$timeStart),] %>% group_by(lectureId,studentId) %>% mutate(fsfat=row_number()-1)
hashAnswer <- inner_join(MyAnswer,hashes) %>%
pivot_longer(c(hash,hash2,hash3),values_to = "hash") %>% filter(!is.na(hash))
minstadagsetning <- hashAnswer %>% group_by(studentId,hash) %>% summarise('mindag'=min(timeStart))
hashAnsdag <- full_join(hashAnswer,minstadagsetning)
hashAnsdag$hsta <- ifelse(hashAnsdag$mindag==hashAnsdag$timeStart,0,1)
hashAnsdag <- hashAnsdag %>% mutate("dtStart"=ymd_hms(.$timeStart),"dtEnd"=ymd_hms(.$timeEnd))
hashAnsdag$dtStart <- ymd_hms(hashAnsdag$timeStart)
View(hashAnsdag)
hashAnsdag$dtEnd <- ymd_hms(hashAnsdag$timeEnd)
?ifelse
?dminutes
?as.duration
hashAnsdag$timeDif <- hashAnsdag %$% hashAnsdag[order(studentId, hash, timeStart),] %$%
ifelse(hash=lag(hash),as.duration(dtStart-lag(dtEnd)),NA)
hashAnsdag$timeDif <- hashAnsdag %$% hashAnsdag[order(studentId, hash, timeStart),] %$%
ifelse(hash==lag(hash),as.duration(dtStart-lag(dtEnd)),NA)
View(hashAnsdag)
hashAnsdag$timeDif <- hashAnsdag %$% hashAnsdag[order(studentId, hash, timeStart),]
hashAnsdag$timeDif <- hashAnsdag %$% hashAnsdag[order(studentId, hash, timeStart),] %$%
ifelse(hash==lag(hash),as.duration(dtStart-lag(dtEnd)),NA)
hashAnsdag %$% hashAnsdag[order(studentId, hash, timeStart),]
view(hashAnsdag %$% hashAnsdag[order(studentId, hash, timeStart),])
View(hashAnsdag %$% hashAnsdag[order(studentId, hash, timeStart),])
?arrange()
MyAnswer <- MyAnswer %>% arrange(timeStart) %>% group_by(lectureId,studentId) %>% mutate(fsfat=row_number()-1)
View(MyAnswer)
hashAnsdag$timeDif <- hashAnsdag %>% arrange(studentId, hash, timeStart) %$%
ifelse(hash==lag(hash),as.duration(dtStart-lag(dtEnd)),NA)
View(hashAnsdag)
View(hashAnsdag %$% hashAnsdag[order(studentId, hash, timeStart),])
View(hashAnsdag %>% arrange(studentId, hash, timeStart))
View(hashAnsdag %>% arrange(studentId, hash, timeStart))
?lag
hashAnsdag$timeDif <- hashAnsdag %>% arrange(studentId, hash, timeStart) %$%
ifelse(hash==lag(hash,1),as.duration(dtStart-lag(dtEnd)),NA)
View(hashAnsdag %>% arrange(studentId, hash, timeStart))
hashAnsdag$test <-  hashAnsdag %>% arrange(studentId, hash, timeStart) %$% lag(hash)
View(hashAnsdag %>% arrange(studentId, hash, timeStart))
hashAnsdag$test2 <-  hashAnsdag %>% arrange(studentId, hash, timeStart) %$% hash
View(hashAnsdag)
View(hashAnsdag %>% arrange(studentId, hash, timeStart))
hashAnsdag$test2 <-  hashAnsdag %>% group_by(studentId, hash, timeStart) %$% hash
View(hashAnsdag %>% arrange(studentId, hash, timeStart))
hashAnsdag$test2 <-  hashAnsdag %>% group_by(studentId, hash, timeStart) %$% lag(hash)
View(hashAnsdag %>% arrange(studentId, hash, timeStart))
hashAnsdag$test <-  hashAnsdag %>% group_by(studentId, hash, timeStart) %$% lag(hash)
hashAnsdag$test2 <-  hashAnsdag %>% group_by(studentId, hash, timeStart) %$% hash
View(hashAnsdag %>% arrange(studentId, hash, timeStart))
hashAnsdag$test <-  hashAnsdag %>% group_by(studentId, hash, timeStart) %$% lag(hash)
View(hashAnsdag %>% arrange(studentId, hash, timeStart))
hashAnsdag$test <-  hashAnsdag %>% group_by(studentId, hash, timeStart) %$% lag(hash,order_by = "group")
View(hashAnsdag %>% arrange(studentId, hash, timeStart))
hashAnsdag$test <-  hashAnsdag %>% group_by(studentId, hash, timeStart) %$% lag(hash,order_by = c(studentId,hash,timeStart))
hashAnsdag$test <-  hashAnsdag %>% group_by(studentId, hash, timeStart) %>% arrange(studentId,has,timeStart) %$% lag(hash)
hashAnsdag$test <-  hashAnsdag %>% group_by(studentId, hash, timeStart) %>% arrange(studentId,hash,timeStart) %$% lag(hash)
View(hashAnsdag %>% arrange(studentId, hash, timeStart))
hashAnsdag <-  hashAnsdag %>% group_by(studentId, hash, timeStart) %>% arrange(studentId,hash,timeStart) %$%
mutate(test=lag(hash))
hashAnsdag <-  hashAnsdag %>% group_by(studentId, hash, timeStart) %>% arrange(studentId,hash,timeStart) %>%
mutate(test=lag(hash))
View(hashAnsdag %>% arrange(studentId, hash, timeStart))
hashAnsdag <-  hashAnsdag %>% group_by(studentId, hash, timeStart) %>%
mutate(test=lag(hash))
View(hashAnsdag %>% arrange(studentId, hash, timeStart))
hashAnsdag <-  hashAnsdag %>% group_by(studentId, hash, timeStart) %>%
mutate(test=lag(.$hash))
hashAnsdag <-  hashAnsdag %>% group_by(studentId, hash, timeStart) %>%
mutate(test=lag(hash,-1))
hashAnsdag <-  hashAnsdag %>% group_by(studentId, hash, timeStart) %>%
mutate(test=lag(hash,1))
View(hashAnsdag %>% arrange(studentId, hash, timeStart))
hashAnsdag <-  hashAnsdag %>% group_by(studentId, hash, timeStart)
hashAnsdag$test <- lag(hashAnsdag$hash)
View(hashAnsdag %>% arrange(studentId, hash, timeStart))
hashAnsdag$timeDif <- hashAnsdag %>% arrange(studentId, hash, timeStart) %$%
ifelse(hash==lag(hash,1),as.duration(dtStart-lag(dtEnd)),NA)
View(hashAnsdag %>% arrange(studentId, hash, timeStart))
summary(hashAnsdag)
library(dbplyr)
library(dplyr)
library(RMySQL)
library(tidyr)
library(MASS)
library(ggplot2)
library(magrittr)
library(lubridate)
#les inn öll gögninn, nota mestalagi bara answer gagnasafnið
twDb<-src_mysql("tw_quizdb", host = "127.0.0.1", port = 3306, user = "gss24", password = "JuwofKWT2Ewc")
answer<-tbl(twDb,"answer")
question<-tbl(twDb,"question")
#hashes<-read.csv("Data/bighashfile.txt",sep=" ",col.names = c("dir","qName","hash","numQ","notaType"))
hashes<-read.csv("Data/bighashfile.wide.txt",sep=" ",col.names = c("dir","qName","hash","hash2","hash3","numQ","notaType"),na.strings = ".")
#pathQ<-unique(paste(hashes$dir,hashes$qName,sep=""))
plonePath<-unique(paste(hashes$dir,hashes$qName,sep=""))
plonePath<-as.data.frame(plonePath)
hashes$plonePath<-paste(hashes$dir,hashes$qName,sep="")
left_join(plonePath,as.data.frame(question))->myQuestions
#question%>%filter(plonePath%in%pathQ)->myQuestions
#myQuestions<-as.data.frame(myQuestions)
answer%>%filter(timeStart>"2020-01-01 00:01:01")->answerRed
answerRed<-as.data.frame(answerRed)
inner_join(answerRed,myQuestions) -> myAnswer
MyAnswer<-as.data.frame(myAnswer)
#Set inn fjöldi svara framAd Thessu og hefséð áður
#MyAnswer <- MyAnswer[order(MyAnswer$timeStart),] %>% group_by(lectureId,studentId) %>% mutate(fsfat=row_number()-1)
MyAnswer <- MyAnswer %>% arrange(timeStart) %>% group_by(lectureId,studentId) %>% mutate(fsfat=row_number()-1)
hashAnswer <- inner_join(MyAnswer,hashes) %>%
pivot_longer(c(hash,hash2,hash3),values_to = "hash") %>% filter(!is.na(hash))
minstadagsetning <- hashAnswer %>% group_by(studentId,hash) %>% summarise('mindag'=min(timeStart))
hashAnsdag <- full_join(hashAnswer,minstadagsetning)
hashAnsdag$hsta <- ifelse(hashAnsdag$mindag==hashAnsdag$timeStart,0,1)
hashAnsdag <- hashAnsdag %>% mutate("dtStart"=ymd_hms(.$timeStart),"dtEnd"=ymd_hms(.$timeEnd))
hashAnsdag$dtStart <- ymd_hms(hashAnsdag$timeStart)
hashAnsdag$dtEnd <- ymd_hms(hashAnsdag$timeEnd)
hashAnsdag <-  hashAnsdag %>% group_by(studentId, hash, timeStart)
hashAnsdag$timeDif <- hashAnsdag %>% arrange(studentId, hash, timeStart) %$%
ifelse(hash==lag(hash,1),as.duration(dtStart-lag(dtEnd)),NA)
View(hashAnsdag %>% arrange(studentId, hash, timeStart))
hashAnsdag <-  hashAnsdag %>% group_by(studentId, hash, timeStart)
hashAnsdag <-  hashAnsdag %>% group_by(studentId, hash, timeStart) %>% arrange(studentId,hash, timeStart)
hashAnsdag$timeDif <- hashAnsdag %>% arrange(studentId, hash, timeStart) %$%
ifelse(hash==lag(hash,1),as.duration(dtStart-lag(dtEnd)),NA)
View(hashAnsdag %>% arrange(studentId, hash, timeStart))
hashAnsdag4 <- hashAnsdag[!grepl('NOTA+',hashAnsdag$hash),]
#Vel dálka og save-a
hashanswers <- hashAnsdag %>% dplyr::select(lectureId,studentId,questionId,correct,hash,fsfat,hsta,timeDif)
hashanswers4 <- hashAnsdag4 %>% dplyr::select(lectureId,studentId,questionId,correct,hash,fsfat,hsta,timeDif)
write.csv(hashanswers,'Data/hashAnswer.csv')
write.csv(hashanswers4,'Data/hashAnswer4.csv')
#lesum inn gögninn okkar
hashAnswer <- read.csv('Data/hashAnswer4.csv')
hashAnswer <- hashAnswer %>% subset(select=-c(X))
ans2.glm150 <- glm(correct~fsfat*hsta+timeDif,family = binomial(link = "logit"), data = hashAnswery150)
#Skoðum stuttlega þegar skorið er af gögnunum
hashAnswery150 <- hashAnswer%>% filter(fsfat<150)
ans2.glm150 <- glm(correct~fsfat*hsta+timeDif,family = binomial(link = "logit"), data = hashAnswery150)
ans.glm150 <- glm(correct~fsfat*hsta,family = binomial(link="logit"),data=hashAnswery150)
p1 <- ggplot(data=cbind(hashAnswery150,pred=predict.glm(ans.glm150,type = "response")),aes(x=fsfat,y=correct, color=hsta))+
geom_point()+
geom_line(aes(y=pred))+
ggtitle("Undir 150")+
annotate("text",x=100,y=0.4,label= paste("fjoldi nemenda sem fóru lengra er",hashAnswer%>%
filter(fsfat>150) %>% summarise(n_distinct(studentId)), sep = " " ))
p12 <-ggplot(data=cbind(hashAnswery150,pred=predict.glm(ans2.glm150,type = "response")),aes(x=fsfat,y=correct, color=hsta))+
geom_point()+
geom_line(aes(y=pred))+
ggtitle("Undir 150")+
annotate("text",x=100,y=0.4,label= paste("fjoldi nemenda sem fóru lengra er",hashAnswer%>%
filter(fsfat>150) %>% summarise(n_distinct(studentId)), sep = " " ))
?predict.glm
p12 <-ggplot(data=cbind(hashAnswery150,pred=predict.glm(ans2.glm150,type = "response")),aes(x=fsfat,y=correct, group=hsta,color=timeDif))+
geom_point()+
geom_line(aes(y=pred))+
ggtitle("Undir 150")+
annotate("text",x=100,y=0.4,label= paste("fjoldi nemenda sem fóru lengra er",hashAnswer%>%
filter(fsfat>150) %>% summarise(n_distinct(studentId)), sep = " " ))
ggplot(hashAnswery150,aes(x=fsfat,y=timeDif))+geom_point()
summary(ans2.glm150)
summary(ans.glm150)
hashAnswer$timeDif <- hashAnswer$timeDif/360
#Skoðum stuttlega þegar skorið er af gögnunum
hashAnswery150 <- hashAnswer%>% filter(fsfat<150)
ans.glm150 <- glm(correct~fsfat*hsta,family = binomial(link="logit"),data=hashAnswery150)
ans2.glm150 <- glm(correct~fsfat*hsta+timeDif,family = binomial(link = "logit"), data = hashAnswery150)
summary(ans.glm150)
summary(ans2.glm150)
summary(ans.glm150)
summary(ans2.glm150)
ans2.glm150 <- glm(correct~fsfat+hsta+timeDif,family = binomial(link = "logit"), data = hashAnswery150)
summary(ans2.glm150)
hashanswers <- hashAnsdag %>% dplyr::select(lectureId,studentId,questionId,correct,hash,fsfat,hsta,timeDif)
hashanswers4 <- hashAnsdag4 %>% dplyr::select(lectureId,studentId,questionId,correct,hash,fsfat,hsta,timeDif)
write.csv(hashanswers,'Data/hashAnswer.csv')
write.csv(hashanswers4,'Data/hashAnswer4.csv')
#lesum inn gögninn okkar
hashAnswer <- read.csv('Data/hashAnswer4.csv')
hashAnswer <- hashAnswer %>% subset(select=-c(X))
hashAnswer$hsta <- hashAnswer$hsta%>%as.character()
hashAnswer$timeDif <- hashAnswer$timeDif/360
View(hashAnswer)
ans2.glm150 <- glm(correct~fsfat+timeDif,family = binomial(link = "logit"), data = hashAnswery150)
summary(ans2.glm150)
library(dbplyr)
library(dplyr)
library(RMySQL)
library(tidyr)
library(MASS)
library(ggplot2)
library(magrittr)
library(lubridate)
twDb<-src_mysql("tw_quizdb", host = "127.0.0.1", port = 3306, user = "gss24", password = "JuwofKWT2Ewc")
answer<-tbl(twDb,"answer")
question<-tbl(twDb,"question")
#hashes<-read.csv("Data/bighashfile.txt",sep=" ",col.names = c("dir","qName","hash","numQ","notaType"))
hashes<-read.csv("Data/bighashfile.wide.txt",sep=" ",col.names = c("dir","qName","hash","hash2","hash3","numQ","notaType"),na.strings = ".")
#pathQ<-unique(paste(hashes$dir,hashes$qName,sep=""))
plonePath<-unique(paste(hashes$dir,hashes$qName,sep=""))
plonePath<-as.data.frame(plonePath)
hashes$plonePath<-paste(hashes$dir,hashes$qName,sep="")
left_join(plonePath,as.data.frame(question))->myQuestions
#question%>%filter(plonePath%in%pathQ)->myQuestions
#myQuestions<-as.data.frame(myQuestions)
answer%>%filter(timeStart>"2020-01-01 00:01:01")->answerRed
answerRed<-as.data.frame(answerRed)
inner_join(answerRed,myQuestions) -> myAnswer
MyAnswer<-as.data.frame(myAnswer)
#Set inn fjöldi svara framAd Thessu og hefséð áður
#MyAnswer <- MyAnswer[order(MyAnswer$timeStart),] %>% group_by(lectureId,studentId) %>% mutate(fsfat=row_number()-1)
MyAnswer <- MyAnswer %>% arrange(timeStart) %>% group_by(lectureId,studentId) %>% mutate(fsfat=row_number()-1)
hashAnswer <- inner_join(MyAnswer,hashes) %>%
pivot_longer(c(hash,hash2,hash3),values_to = "hash") %>% filter(!is.na(hash))
minstadagsetning <- hashAnswer %>% group_by(studentId,hash) %>% summarise('mindag'=min(timeStart))
hashAnsdag <- full_join(hashAnswer,minstadagsetning)
hashAnsdag$hsta <- ifelse(hashAnsdag$mindag==hashAnsdag$timeStart,0,1)
#hashAnsdag <- hashAnsdag %>% mutate("dtStart"=ymd_hms(.$timeStart),"dtEnd"=ymd_hms(.$timeEnd))
hashAnsdag$dtStart <- ymd_hms(hashAnsdag$timeStart)
hashAnsdag$dtEnd <- ymd_hms(hashAnsdag$timeEnd)
hashAnsdag <-  hashAnsdag %>% group_by(studentId, hash, timeStart) %>% arrange(studentId,hash, timeStart)
hashAnsdag$timeDif <- hashAnsdag %>% arrange(studentId, hash, timeStart) %$%
ifelse(hash==lag(hash,1),as.duration(dtStart-lag(dtEnd)),NA)
View(hashAnsdag %>% arrange(studentId, hash, timeStart))
hashAnsdag$sumable <- ifelse(hashAnsdag$hsta==0,1,0)
?cumsum
hashAnsdag$fsvfat <- hashAnsdag %>% group_by(studentId,lectureId) %$% cumsum(sumable)
View(hashAnsdag)
hashAnsdag <- hashAnsdag %>% group_by(studentId,lectureId) %>% arrange(timeStart) %>% mutate(fsvfat=cumsum(sumable))
View(hashAnsdag)
hashAnsdag4 <- hashAnsdag[!grepl('NOTA+',hashAnsdag$hash),]
#Vel dálka og save-a
hashanswers <- hashAnsdag %>% dplyr::select(lectureId,studentId,questionId,correct,hash,fsfat,hsta,timeDif)
hashanswers4 <- hashAnsdag4 %>% dplyr::select(lectureId,studentId,questionId,correct,hash,fsfat,hsta,timeDif)
write.csv(hashanswers,'Data/hashAnswer.csv')
write.csv(hashanswers4,'Data/hashAnswer4.csv')
library(dbplyr)
library(dplyr)
library(RMySQL)
library(tidyr)
library(MASS)
library(ggplot2)
library(gridExtra)
hashAnswer <- read.csv('Data/hashAnswer4.csv')
hashAnswer <- hashAnswer %>% subset(select=-c(X))
hashAnswer$hsta <- hashAnswer$hsta%>%as.character()
hashAnswer$timeDif <- hashAnswer$timeDif/360
library(dbplyr)
library(dplyr)
library(RMySQL)
library(tidyr)
library(MASS)
library(ggplot2)
library(magrittr)
library(lubridate)
library(dbplyr)
library(dplyr)
library(RMySQL)
library(tidyr)
library(MASS)
library(ggplot2)
library(magrittr)
library(lubridate)
#les inn öll gögninn, nota mestalagi bara answer gagnasafnið
twDb<-src_mysql("tw_quizdb", host = "127.0.0.1", port = 3306, user = "gss24", password = "JuwofKWT2Ewc")
answer<-tbl(twDb,"answer")
question<-tbl(twDb,"question")
#hashes<-read.csv("Data/bighashfile.txt",sep=" ",col.names = c("dir","qName","hash","numQ","notaType"))
hashes<-read.csv("Data/bighashfile.wide.txt",sep=" ",col.names = c("dir","qName","hash","hash2","hash3","numQ","notaType"),na.strings = ".")
#pathQ<-unique(paste(hashes$dir,hashes$qName,sep=""))
plonePath<-unique(paste(hashes$dir,hashes$qName,sep=""))
plonePath<-as.data.frame(plonePath)
hashes$plonePath<-paste(hashes$dir,hashes$qName,sep="")
left_join(plonePath,as.data.frame(question))->myQuestions
#question%>%filter(plonePath%in%pathQ)->myQuestions
#myQuestions<-as.data.frame(myQuestions)
answer%>%filter(timeStart>"2020-01-01 00:01:01")->answerRed
answerRed<-as.data.frame(answerRed)
inner_join(answerRed,myQuestions) -> myAnswer
MyAnswer<-as.data.frame(myAnswer)
#Set inn fjöldi svara framAd Thessu og hefséð áður
#MyAnswer <- MyAnswer[order(MyAnswer$timeStart),] %>% group_by(lectureId,studentId) %>% mutate(fsfat=row_number()-1)
MyAnswer <- MyAnswer %>% arrange(timeStart) %>% group_by(lectureId,studentId) %>% mutate(fsfat=row_number()-1)
hashAnswer <- inner_join(MyAnswer,hashes) %>%
pivot_longer(c(hash,hash2,hash3),values_to = "hash") %>% filter(!is.na(hash))
minstadagsetning <- hashAnswer %>% group_by(studentId,hash) %>% summarise('mindag'=min(timeStart))
hashAnsdag <- full_join(hashAnswer,minstadagsetning)
hashAnsdag$hsta <- ifelse(hashAnsdag$mindag==hashAnsdag$timeStart,0,1)
#hashAnsdag <- hashAnsdag %>% mutate("dtStart"=ymd_hms(.$timeStart),"dtEnd"=ymd_hms(.$timeEnd))
hashAnsdag$dtStart <- ymd_hms(hashAnsdag$timeStart)
hashAnsdag$dtEnd <- ymd_hms(hashAnsdag$timeEnd)
hashAnsdag <-  hashAnsdag %>% group_by(studentId, hash, timeStart) %>% arrange(studentId,hash, timeStart)
hashAnsdag$timeDif <- hashAnsdag %>% arrange(studentId, hash, timeStart) %$%
ifelse(hash==lag(hash,1),as.duration(dtStart-lag(dtEnd)),NA)
# ?lag
# View(hashAnsdag %>% arrange(studentId, hash, timeStart))
#setjum inn fsvfat sem er fjöldi svara fram að þessu
hashAnsdag$sumable <- ifelse(hashAnsdag$hsta==0,1,0)
hashAnsdag <- hashAnsdag %>% group_by(studentId,lectureId) %>% arrange(timeStart) %>% mutate(fsvfat=cumsum(sumable))
hashAnsdag4 <- hashAnsdag[!grepl('NOTA+',hashAnsdag$hash),]
#Vel dálka og save-a
hashanswers <- hashAnsdag %>% dplyr::select(lectureId,studentId,questionId,correct,hash,fsfat,fsvfat,hsta,timeDif)
hashanswers4 <- hashAnsdag4 %>% dplyr::select(lectureId,studentId,questionId,correct,hash,fsfat,fsvfat,hsta,timeDif)
write.csv(hashanswers,'Data/hashAnswer.csv')
write.csv(hashanswers4,'Data/hashAnswer4.csv')
library(dbplyr)
library(dplyr)
library(RMySQL)
library(tidyr)
library(MASS)
library(ggplot2)
library(gridExtra)
#lesum inn gögninn okkar
hashAnswer <- read.csv('Data/hashAnswer4.csv')
hashAnswer <- hashAnswer %>% subset(select=-c(X))
hashAnswer$hsta <- hashAnswer$hsta%>%as.character()
hashAnswer$timeDif <- hashAnswer$timeDif/360
p7 <- hashAnswer %>% group_by(fsvfat,hsta) %>% filter(fsfat>=0) %>%
summarise("med"=mean(correct),"fjold"=n_distinct(studentId)) %>%
ggplot(aes(x=fsfat,y=med,color=hsta), show.legend=FALSE)+
geom_point(show.legend = FALSE)+
geom_smooth(show.legend = FALSE)
p7
p7 <- hashAnswer %>% group_by(fsvfat,hsta) %>%
summarise("med"=mean(correct),"fjold"=n_distinct(studentId)) %>%
ggplot(aes(x=fsfat,y=med,color=hsta), show.legend=FALSE)+
geom_point(show.legend = FALSE)+
geom_smooth(show.legend = FALSE)
p7
p7 <- hashAnswer %>% group_by(fsvfat,hsta) %>%
summarise("med"=mean(correct),"fjold"=n_distinct(studentId)) %>%
ggplot(aes(x=fsvfat,y=med,color=hsta), show.legend=FALSE)+
geom_point(show.legend = FALSE)+
geom_smooth(show.legend = FALSE)
p7
ggplot(hashAnswer,aes(x=fsfat,y=fsvfat))+geom_point()
ggplot(hashAnswer,aes(x=fsfat,y=fsvfat,color=hsta))+geom_point()
ans3.glm150 <- glm(correct~fsvfat*hsta,,family = binomial(link = "logit"), data = hashAnswery150)
#Skoðum stuttlega þegar skorið er af gögnunum
hashAnswery150 <- hashAnswer%>% filter(fsfat<150)
ans.glm150 <- glm(correct~fsfat*hsta,family = binomial(link="logit"),data=hashAnswery150)
ans3.glm150 <- glm(correct~fsvfat*hsta,,family = binomial(link = "logit"), data = hashAnswery150)
summary(ans3.glm150)
ans <- glm(correct~fsfat*hsta,family = binomial(link="logit"),data=hashAnswer)
ans2 <- glm(correct~fsvfat*hsta,family = binomial(link="logit"),data=hashAnswer)
ans3 <- glm(correct~fsfat+fsvfat,family = binomial(link="logit"),data=hashAnswer)
summary(ans3)
summary(ans)
summary(ans2)
summary(ans3)
ans3 <- glm(correct~fsfat+fsvfat+hsta,family = binomial(link="logit"),data=hashAnswer)
summary(ans3)
summary(ans)
summary(ans2)
summary(ans3)
ans3 <- glm(correct~(fsfat+fsvfat)*hsta,family = binomial(link="logit"),data=hashAnswer)
summary(ans3)
#Skoðum stuttlega þegar skorið er af gögnunum
hashAnswery150 <- hashAnswer%>% filter(fsfat<150)
ans.glm150 <- glm(correct~fsfat*hsta,family = binomial(link="logit"),data=hashAnswery150)
ans2.glm150 <- glm(correct~fsvfat*hsta,family = binomial(link = "logit"), data = hashAnswery150)
p1 <- ggplot(data=cbind(hashAnswery150,pred=predict.glm(ans.glm150,type = "response")),aes(x=fsfat,y=correct, color=hsta))+
geom_point()+
geom_line(aes(y=pred))+
ggtitle("Undir 150")+
annotate("text",x=100,y=0.4,label= paste("fjoldi nemenda sem fóru lengra er",hashAnswer%>%
filter(fsfat>150) %>% summarise(n_distinct(studentId)), sep = " " ))
p12 <-ggplot(data=cbind(hashAnswery150,pred=predict.glm(ans2.glm150,type = "response")),aes(x=fsvfat,y=correct, color=hsta))+
geom_point()+
geom_line(aes(y=pred))+
ggtitle("Undir 150")+
annotate("text",x=100,y=0.4,label= paste("fjoldi nemenda sem fóru lengra er",hashAnswer%>%
filter(fsfat>150) %>% summarise(n_distinct(studentId)), sep = " " ))
grid.arrange(p1,p12,nrow=1)
p1 <- ggplot(data=cbind(hashAnswery150,pred=predict.glm(ans.glm150,type = "response")),aes(x=fsfat,y=correct, color=hsta))+
geom_point()+
geom_line(aes(y=pred))+
ggtitle("Undir 150")
p12 <-ggplot(data=cbind(hashAnswery150,pred=predict.glm(ans2.glm150,type = "response")),aes(x=fsvfat,y=correct, color=hsta))+
geom_point()+
geom_line(aes(y=pred))+
ggtitle("Undir 150")
grid.arrange(p1,p12,nrow=1)
library(dbplyr)
library(dplyr)
library(RMySQL)
library(tidyr)
library(MASS)
library(ggplot2)
library(gridExtra)
#lesum inn gögninn okkar
hashAnswer <- read.csv('Data/hashAnswer4.csv')
hashAnswer <- hashAnswer %>% subset(select=-c(X))
hashAnswer$hsta <- hashAnswer$hsta%>%as.character()
draw_by_limit <- function(hashA, limit) {
hashAnswery <- hashA%>% filter(fsfat<limit)
ans.glm <- glm(correct~fsfat*hsta,family = binomial(link="logit"),data=hashAnswery)
p <- ggplot(data=cbind(hashAnswery,pred=predict.glm(ans.glm,type = "response")),aes(x=fsfat,y=correct, color=hsta))+
geom_point()+
geom_line(aes(y=pred))+
ggtitle(paste("Undir ", limit,sep = ""))+
annotate("text",x=limit-50,y=0.4,label= paste("fjoldi nemenda sem fóru lengra er",hashA%>%
filter(fsfat>limit) %>% summarise(n_distinct(studentId)), sep = " " ))
return(p)
}
p1 <- draw_by_limit(hashAnswer,150)
p1
p1 <- draw_by_limit(hashAnswer,150)
p2 <- draw_by_limit(hashAnswer,200)
p3 <- draw_by_limit(hashAnswer,250)
p4 <- draw_by_limit(hashAnswer,300)
p1 <- draw_by_limit(hashAnswer,150)
p2 <- draw_by_limit(hashAnswer,200)
p3 <- draw_by_limit(hashAnswer,250)
p4 <- draw_by_limit(hashAnswer,300)
grid.arrange(p1, p2, p3, p4, nrow= 2)
hashAnswer <- read.csv('Data/hashAnswer4.csv')
hashAnswer <- hashAnswer %>% subset(select=-c(X))
hashAnswer$hsta <- hashAnswer$hsta%>%as.character()
library(dbplyr)
library(dplyr)
library(RMySQL)
library(tidyr)
library(MASS)
library(ggplot2)
library(gridExtra)
hashAnswer <- read.csv('Data/hashAnswer4.csv')
hashAnswer <- hashAnswer %>% subset(select=-c(X))
hashAnswer$hsta <- hashAnswer$hsta%>%as.character()
ans <- glm(correct~fsfat*hsta,family = binomial(link="logit"),data=hashAnswer)
ans2 <- glm(correct~fsvfat*hsta,family = binomial(link="logit"),data=hashAnswer)
ans3 <- glm(correct~(fsfat+fsvfat)*hsta,family = binomial(link="logit"),data=hashAnswer)
library(dbplyr)
library(dplyr)
library(RMySQL)
library(tidyr)
library(MASS)
library(ggplot2)
library(gridExtra)
#lesum inn gögninn okkar
hashAnswer <- read.csv('Data/hashAnswer4.csv')
hashAnswer <- hashAnswer %>% subset(select=-c(X))
hashAnswer$hsta <- hashAnswer$hsta%>%as.character()
#Skoðum stuttlega þegar skorið er af gögnunum
ans <- glm(correct~fsfat*hsta,family = binomial(link="logit"),data=hashAnswer)
ans2 <- glm(correct~fsvfat*hsta,family = binomial(link="logit"),data=hashAnswer)
ans3 <- glm(correct~(fsfat+fsvfat)*hsta,family = binomial(link="logit"),data=hashAnswer)
hashAnswer %>% mutate(res = residuals.glm(ans, type = "response")) %>%
ggplot(aes(x = fsfat, y = res)) + geom_point() +
geom_hline(aes(x = 0)) +
facet_grid(hsta)
?facet_grid
hashAnswer %>% mutate(res = residuals.glm(ans, type = "response")) %>%
ggplot(aes(x = fsfat, y = res)) + geom_point() +
geom_hline(aes(x = 0)) +
facet_grid(cols = hsta)
hashAnswer %>% mutate(res = residuals.glm(ans, type = "response")) %>%
ggplot(aes(x = fsfat, y = res)) + geom_point() +
geom_hline(aes(x = 0)) +
facet_grid(cols = vars(hsta))
hashAnswer %>% mutate(res = residuals.glm(ans, type = "response")) %>%
ggplot(aes(x = fsfat, y = res)) + geom_point() +
geom_hline(aes(y = 0)) +
facet_grid(cols = vars(hsta))
?geom_hline
hashAnswer %>% mutate(res = residuals.glm(ans, type = "response")) %>%
ggplot(aes(x = fsfat, y = res)) + geom_point() +
geom_hline(yintercept = 0) +
facet_grid(cols = vars(hsta))
hashAnswer %>% mutate(res = residuals.glm(ans, type ="deviance")) %>%
ggplot(aes(x = fsfat, y = res)) + geom_point() +
geom_hline(yintercept = 0) +
facet_grid(cols = vars(hsta))
hashAnswer %>% mutate(res = residuals.glm(ans, type ="pearson")) %>%
ggplot(aes(x = fsfat, y = res)) + geom_point() +
geom_hline(yintercept = 0) +
facet_grid(cols = vars(hsta))
