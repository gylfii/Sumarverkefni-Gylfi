"FY300" = sum(fsfat >= 30)), "HY300" = mean(fsfat > 30))
hashAnswer %>% group_by(lectureId) %>% summarise("FY50" = sum(fsfat >= 5), "HY50" = mean(fsfat > 5),
"FY100" = sum(fsfat >= 10), "HY100" = mean(fsfat > 10),
"FY150" = sum(fsfat >= 15), "HY150" = mean(fsfat > 15),
"FY200" = sum(fsfat >= 20), "HY200" = mean(fsfat > 20),
"FY250" = sum(fsfat >= 25), "HY250" = mean(fsfat > 25),
"FY300" = sum(fsfat >= 30), "HY300" = mean(fsfat > 30))
a <- hashAnswer %>% summarise("FY50" = sum(fsfat >= 5), "FY100" = sum(fsfat >= 10),
"FY150" = sum(fsfat >= 15), "FY200" = sum(fsfat >= 20),
"FY250" = sum(fsfat >= 25), "FY300" = sum(fsfat >= 30))
b <- hashAnswer %>% summarise("HY50" = mean(fsfat >= 5), "HY100" = mean(fsfat >= 10),
"HY150" = mean(fsfat >= 15), "HY200" = mean(fsfat >= 20),
"HY250" = mean(fsfat >= 25), "HY300" = mean(fsfat >= 30))
ab <- cbind(a, b)
ab %>% pivot_longer(c('FY50', 'HY50', 'FY100', 'HY100', 'FY150', 'HY150', 'FY200', 'HY200', 'FY250', 'HY250', 'FY300', 'HY300'),
names_to = "type", values_to = "values")
?pivot_wider
?pivot_wider_spec
?pivot_wider
a <- hashAnswer %>% summarise("FY50" = sum(fsfat >= 5), "FY100" = sum(fsfat >= 10),
"FY150" = sum(fsfat >= 15), "FY200" = sum(fsfat >= 20),
"FY250" = sum(fsfat >= 25), "FY300" = sum(fsfat >= 30))
b <- hashAnswer %>% summarise("HY50" = mean(fsfat >= 5), "HY100" = mean(fsfat >= 10),
"HY150" = mean(fsfat >= 15), "HY200" = mean(fsfat >= 20),
"HY250" = mean(fsfat >= 25), "HY300" = mean(fsfat >= 30))
ab <- cbind(a, b)
?spread
ab %>% pivot_longer(c('FY50', 'HY50', 'FY100', 'HY100', 'FY150', 'HY150', 'FY200', 'HY200', 'FY250', 'HY250', 'FY300', 'HY300'),
names_to = "type", values_to = "values") %>% spread(type, values)
ab %>% pivot_longer(c('FY50', 'HY50', 'FY100', 'HY100', 'FY150', 'HY150', 'FY200', 'HY200', 'FY250', 'HY250', 'FY300', 'HY300'),
names_to = "typewLim", values_to = "values") %>% spread(type, values) %>%
mutate("type" = str_sub(typewLim, 1, 2))
ab %>% pivot_longer(c('FY50', 'HY50', 'FY100', 'HY100', 'FY150', 'HY150', 'FY200', 'HY200', 'FY250', 'HY250', 'FY300', 'HY300'),
names_to = "typewLim", values_to = "values") %>%
mutate("type" = str_sub(typewLim, 1, 2))
?pivot_wider
ab %>% pivot_longer(c('FY50', 'HY50', 'FY100', 'HY100', 'FY150', 'HY150', 'FY200', 'HY200', 'FY250', 'HY250', 'FY300', 'HY300'),
names_to = "typewLim", values_to = "values") %>%
mutate("type" = str_sub(typewLim, 1, 2)) %>% pivot_wider(names_from = type, values_from = values)
?seperate
library(tidyverse)
?seperate
?separate
ans <- glmer(correct ~ fsvfatu*hsta + lectureId + (1 | studentId), family = binomial(link = "logit"), data = hashTest, control=glmerControl(optimizer="nloptwrap",optCtrl=list(maxfun=2e5)))
ans <- glmer(correct ~ fsvfatu*hsta + lectureId + (1 | studentId), family = binomial(link = "logit"), data = hashTest, control=glmerControl(optimizer="bobyqa",optCtrl=list(maxfun=2e5)))
summary(ans)
broom::tidy(ans)
hashTest$pred <- predict(ans, type = "response")
p1 <- hashTest %>% filter(hsta == "0") %>% ggplot(aes(x = fsvfatu, y = correct, group = studentId), ) +
geom_point() +
geom_line(aes(y = pred)) +
theme(legend.position = "none") +
facet_wrap(vars(lectureId))
p2 <- hashTest %>% filter(lectureId == "3082" & hsta == "1") %>% ggplot(aes(x = fsvfatu, y = correct, group = studentId), ) +
geom_point() +
geom_line(aes(y = pred)) +
theme(legend.position = "none")
grid.arrange(p1, p2, nrow = 1)
p1 <- hashTest %>% filter(hsta == "0") %>% ggplot(aes(x = fsvfatu, y = correct, group = studentId), ) +
geom_point() +
geom_line(aes(y = pred)) +
theme(legend.position = "none")
p2 <- hashTest %>% filter(lectureId == "3082" & hsta == "1") %>% ggplot(aes(x = fsvfatu, y = correct, group = studentId), ) +
geom_point() +
geom_line(aes(y = pred)) +
theme(legend.position = "none")
p1 <- hashTest %>% filter(hsta == "0") %>% ggplot(aes(x = fsvfatu, y = correct, group = studentId), ) +
geom_point() +
geom_line(aes(y = pred)) +
theme(legend.position = "none") +
facet_wrap(vars(lectureId))
p1
p1 <- hashTest %>% filter(hsta == "0" & lectureId == "3082") %>% ggplot(aes(x = fsvfatu, y = correct, group = studentId), ) +
geom_point() +
geom_line(aes(y = pred)) +
theme(legend.position = "none") +
facet_wrap(vars(lectureId))
p2 <- hashTest %>% filter(lectureId == "3082" & hsta == "1") %>% ggplot(aes(x = fsvfatu, y = correct, group = studentId), ) +
geom_point() +
geom_line(aes(y = pred)) +
theme(legend.position = "none")
grid.arrange(p1, p2, nrow = 1)
?separate
p1 <- hashTest %>% filter(hsta == "0" & lectureId == "3082") %>% ggplot(aes(x = fsvfatu, y = correct, group = studentId), ) +
geom_point() +
geom_line(aes(y = pred)) +
theme(legend.position = "none")
p2 <- hashTest %>% filter(lectureId == "3082" & hsta == "1") %>% ggplot(aes(x = fsvfatu, y = correct, group = studentId), ) +
geom_point() +
geom_line(aes(y = pred)) +
theme(legend.position = "none")
grid.arrange(p1, p2, nrow = 1)
?separate
separate("test", into = ("ya", "bo"), sep = 2)
separate("test", into = c("ya", "bo"), sep = 2)
ab %>% pivot_longer(c('FY50', 'HY50', 'FY100', 'HY100', 'FY150', 'HY150', 'FY200', 'HY200', 'FY250', 'HY250', 'FY300', 'HY300'),
names_to = "typewLim", values_to = "values") %>%
seperate(typewLim, into = c("type", "limit"), sep = 2)
ab %>% pivot_longer(c('FY50', 'HY50', 'FY100', 'HY100', 'FY150', 'HY150', 'FY200', 'HY200', 'FY250', 'HY250', 'FY300', 'HY300'),
names_to = "typewLim", values_to = "values") %>%
seperate(typewLim, into = c("type", "limit"), sep = 2)
ab %>% pivot_longer(c('FY50', 'HY50', 'FY100', 'HY100', 'FY150', 'HY150', 'FY200', 'HY200', 'FY250', 'HY250', 'FY300', 'HY300'),
names_to = "typewLim", values_to = "values") %>%
separate(typewLim, into = c("type", "limit"), sep = 2)
ans2 <- glmer(correct ~ fsfat*hsta + lectureId + (1 | studentId), family = binomial(link = "logit"), data = hashTest, control=glmerControl(optimizer="bobyqa",optCtrl=list(maxfun=2e5)))
hashTest$pred2 <- predict(ans2, type = "response")
p3 <- hashTest %>% filter(hsta == "0" & lectureId == "3082") %>% ggplot(aes(x = fsfat, y = correct, group = studentId), ) +
geom_point() +
geom_line(aes(y = pred2)) +
theme(legend.position = "none")
p4 <- hashTest %>% filter(lectureId == "3082" & hsta == "1") %>% ggplot(aes(x = fsfat, y = correct, group = studentId), ) +
geom_point() +
geom_line(aes(y = pred2)) +
theme(legend.position = "none")
grid.arrange(p3, p4, nrow = 1)
ab %>% pivot_longer(c('FY50', 'HY50', 'FY100', 'HY100', 'FY150', 'HY150', 'FY200', 'HY200', 'FY250', 'HY250', 'FY300', 'HY300'),
names_to = "typewLim", values_to = "values") %>%
separate(typewLim, into = c("type", "limit"), sep = 2)
ab %>% pivot_longer(c('FY50', 'HY50', 'FY100', 'HY100', 'FY150', 'HY150', 'FY200', 'HY200', 'FY250', 'HY250', 'FY300', 'HY300'),
names_to = "typewLim", values_to = "values") %>%
separate(typewLim, into = c("type", "limit"), sep = 2) %>% pivot_wider(names_from = type, values_from = values)
ab %>% pivot_longer(c('FY50', 'HY50', 'FY100', 'HY100', 'FY150', 'HY150', 'FY200', 'HY200', 'FY250', 'HY250', 'FY300', 'HY300'),
names_to = "typewLim", values_to = "values") %>%
separate(typewLim, into = c("type", "limit"), sep = 2) %>% pivot_wider(names_from = type, values_from = values)
library(dbplyr)
library(dplyr)
library(RMySQL)
library(tidyr)
library(MASS)
library(ggplot2)
library(magrittr)
library(lubridate)
#les inn öll gögninn, nota mestalagi bara answer gagnasafnið
twDb<-src_mysql("tw_quizdb", host = "127.0.0.1", port = 3306, user = "gss24", password = "JuwofKWT2Ewc")
answer<-tbl(twDb,"answer")
question<-tbl(twDb,"question")
lectureStudentSetting<-tbl(twDb,"lectureStudentSetting")
#hashes<-read.csv("Data/bighashfile.txt",sep=" ",col.names = c("dir","qName","hash","numQ","notaType"))
hashes<-read.csv("Data/bighashfile.wide.txt",sep=" ",col.names = c("dir","qName","hash","hash2","hash3","numQ","notaType"),na.strings = ".")
#pathQ<-unique(paste(hashes$dir,hashes$qName,sep=""))
plonePath<-unique(paste(hashes$dir,hashes$qName,sep=""))
plonePath<-as.data.frame(plonePath)
hashes$plonePath<-paste(hashes$dir,hashes$qName,sep="")
left_join(plonePath,as.data.frame(question))->myQuestions
#question%>%filter(plonePath%in%pathQ)->myQuestions
#myQuestions<-as.data.frame(myQuestions)
answer%>%filter(timeStart>"2020-01-01 00:01:01")->answerRed
answerRed<-as.data.frame(answerRed)
#studentgpow <- lectureStudentSetting %>% as.data.frame() %>% filter(key == "iaa_adaptive_gpow")
inner_join(answerRed,myQuestions) -> myAnswer
MyAnswer<-as.data.frame(myAnswer)
studentgpow <- lectureStudentSetting %>% as.data.frame() %>% filter(key == "iaa_adaptive_gpow")
possiblegpow <- lectureStudentSetting %>% as.data.frame()
possiblegpow %>% group_by(key) %>% summarise(n())
possiblegpow %>% group_by(key) %>% summarise(n()) %>% View
left_join(MyAnswer, studentgpow) %>% View()
explory <- left_join(MyAnswer, studentgpow)
explory %>% filter(is.na(value)) %>% group_by(lectureId, lectureVersion) %>% summarise(n())
explory %>% summarise(n_distinct(lectureId, lectureVersion))
explory %>% filter(!is.na(value)) %>% group_by(lectureId, lectureVersion) %>% summarise(n())
explory  %>% group_by(lectureId, lectureVersion) %>%
summarise("check.na" = sum(is.na(value)), "check.notna" = sum(!is.na(value))) %>%
explory %>% summarise(n_distinct(lectureId, lectureVersion))
explory  %>% group_by(lectureId, lectureVersion) %>%
summarise("check.na" = sum(is.na(value)), "check.notna" = sum(!is.na(value)))
explory  %>% group_by(lectureId, lectureVersion) %>%
summarise("check.na" = sum(is.na(value)), "check.notna" = sum(!is.na(value))) %>%
filter(check.na > 0 & check.notna > 0)
explory %>% filter(!is.na(value)) %>% group_by(lectureId, lectureVersion) %>% summarise(n())
possiblegpow %>% group_by(key) %>% summarise(n()) %>% View
view(answerRed)
possiblegpow %>% View()
table(possiblegpow$key)
studentgpow <- lectureStudentSetting %>% as.data.frame() %>% filter(key == "iaa_adaptive_gpow") %>% subset(-c(lectureVersion))
studentgpow <- lectureStudentSetting %>% as.data.frame() %>% filter(key == "iaa_adaptive_gpow") %>% select(-(lectureVersion))
studentgpow <- lectureStudentSetting %>% as.data.frame() %>% filter(key == "iaa_adaptive_gpow") %>% dplyr::select(-(lectureVersion))
explory <- left_join(MyAnswer, studentgpow)
explory %>% filter(is.na(value)) %>% group_by(lectureId, lectureVersion) %>% summarise(n())
explory %>% filter(!is.na(value)) %>% group_by(lectureId, lectureVersion) %>% summarise(n())
explory  %>% group_by(lectureId, lectureVersion) %>%
summarise("check.na" = sum(is.na(value)), "check.notna" = sum(!is.na(value))) %>%
filter(check.na > 0 & check.notna > 0)
explory  %>% group_by(lectureId, lectureVersion) %>%
summarise("check.na" = sum(is.na(value)), "check.notna" = sum(!is.na(value)))
View(MyAnswer)
View(studentgpow)
studentgpow <- lectureStudentSetting %>% as.data.frame() %>% filter(key == "iaa_adaptive_gpow") %>% dplyr::select(lectureId, studentId, value)
explory <- left_join(MyAnswer, studentgpow)
explory  %>% group_by(lectureId, lectureVersion) %>%
summarise("check.na" = sum(is.na(value)), "check.notna" = sum(!is.na(value)))
explory %>% filter(is.na(value))
explory %>% filter(is.na(value)) %>% View
naexplore <- explory %>% filter(is.na(value))
View(naexplore)
table(naexplore$title)
naexplore <- explory %>% filter(any(is.na(value)))
View(naexplore)
View(studentgpow)
studentgpow <- lectureStudentSetting %>% as.data.frame() %>% filter(key == "iaa_adaptive_gpow") %>% dplyr::select(lectureId, studentId, lectureVersion, value)
possiblegpow %>% View()
studentgpow <- lectureStudentSetting %>% as.data.frame() %>% filter(key == "iaa_adaptive_gpow" & creationDate > "2020-01-01 00:01:01") %>%
dplyr::select(lectureId, studentId, lectureVersion, value)
explory <- left_join(MyAnswer, studentgpow)
View(explory)
explory %>% group_by(lectureId, lectureVersion, studentId) %>% summarise(n_distinct(value))
explory %>% group_by(lectureId, lectureVersion, studentId) %>% summarise("count" = n_distinct(value)) %>% filter(count>1)
explory  %>% group_by(lectureId, lectureVersion) %>%
summarise("check.na" = sum(is.na(value)), "check.notna" = sum(!is.na(value)))
explory %>% filter(is.na(value)) %>% group_by(lectureId, lectureVersion) %>% summarise(n())
explory %>% filter(!is.na(value)) %>% group_by(lectureId, lectureVersion) %>% summarise(n())
naexplore <- explory %>% filter(any(is.na(value)))
View(naexplore)
View(explory)
explory  %>% group_by(lectureId, lectureVersion) %>%
summarise("check.na" = sum(is.na(value)), "check.notna" = sum(!is.na(value)))
explory <- left_join(MyAnswer, studentgpow)
explory %>% filter(is.na(value)) %>% group_by(lectureId, lectureVersion) %>% summarise(n())
explory  %>% group_by(lectureId, lectureVersion) %>%
summarise("check.na" = sum(is.na(value)), "check.notna" = sum(!is.na(value)))
explory %>% filter(is.na(value)) %>% group_by(lectureId, lectureVersion) %>% summarise(n())
explory %>% filter(is.na(value)) %>% group_by(lectureId, lectureVersion) %>% summarise(n()) %>% View()
possiblegpow %>% View()
explory %>% filter(lectureId == '3203')
explory %>% filter(lectureId == '3203') %>% View()
explory %>% filter(lectureId == '3203') %>% dplyr::select(lectureId, studentId, timeStart, value) %>% View()
possiblegpow %>% filter(lectureId == 3203) %>%  View()
possiblegpow %>% filter(lectureId == 3203 & key == "iaa_adaptive_gpow") %>%  View()
possiblegpow %>% filter(lectureId == 3203 & key == "iaa_adaptive_gpow") %>%  View()
hashAnswer <- inner_join(MyAnswer,hashes) %>%
pivot_longer(c(hash,hash2,hash3),values_to = "hash") %>% filter(!is.na(hash))
explory <- left_join(hashAnswer, studentgpow)
explory  %>% group_by(lectureId, lectureVersion) %>%
summarise("check.na" = sum(is.na(value)), "check.notna" = sum(!is.na(value)))
MyAnswer
tibble(MyAnswer)
unique(unique(MyAnswer$lectureId))
length(unique(unique(MyAnswer$lectureId)))
tmp = unique(MyAnswer$lectureId)
tibble(studentgpow)
studentgpow <- lectureStudentSetting %>% as.data.frame() %>% filter(key == "iaa_adaptive_gpow" & creationDate > "2020-01-01 00:01:01") %>%
dplyr::select(lectureId, studentId, lectureVersion, value, creationDate)
tibble(studentgpow)
filter(tibble(studentgpow), lectureId %in% tmp)
filter(tibble(studentgpow), lectureId %in% tmp) %>% View()
tmp
library(Matrix)
library(dbplyr)
library(dplyr)
library(RMySQL)
Sys.setlocale("LC_ALL", "is_IS.UTF-8")
library(RMySQL)
library(MASS)
twDb<-src_mysql("tw_quizdb", host = "127.0.0.1", port = 3306, user = "gss24", password = "JuwofKWT2Ewc")
lectureStudentSetting<-tbl(twDb,"lectureStudentSetting")
possiblegpow %>% filter(lectureId == 3203 & key == "iaa_adaptive_gpow") %>%  View()
possiblegpow <- lectureStudentSetting %>% as.data.frame()
possiblegpow %>% filter(lectureId == 3203 & key == "iaa_adaptive_gpow") %>%  View()
unique(hashAnswer$lectureId)
library(dbplyr)
library(dplyr)
library(RMySQL)
library(tidyr)
library(MASS)
library(ggplot2)
library(magrittr)
library(lubridate)
#les inn öll gögninn, nota mestalagi bara answer gagnasafnið
twDb<-src_mysql("tw_quizdb", host = "127.0.0.1", port = 3306, user = "gss24", password = "JuwofKWT2Ewc")
answer<-tbl(twDb,"answer")
question<-tbl(twDb,"question")
#hashes<-read.csv("Data/bighashfile.txt",sep=" ",col.names = c("dir","qName","hash","numQ","notaType"))
hashes<-read.csv("Data/bighashfile.wide.txt",sep=" ",col.names = c("dir","qName","hash","hash2","hash3","numQ","notaType"),na.strings = ".")
#pathQ<-unique(paste(hashes$dir,hashes$qName,sep=""))
plonePath<-unique(paste(hashes$dir,hashes$qName,sep=""))
plonePath<-as.data.frame(plonePath)
hashes$plonePath<-paste(hashes$dir,hashes$qName,sep="")
left_join(plonePath,as.data.frame(question))->myQuestions
#question%>%filter(plonePath%in%pathQ)->myQuestions
#myQuestions<-as.data.frame(myQuestions)
answer%>%filter(timeStart>"2020-01-01 00:01:01")->answerRed
answerRed<-as.data.frame(answerRed)
inner_join(answerRed,myQuestions) -> myAnswer
MyAnswer<-as.data.frame(myAnswer)
#bæti við fjölda incorrect choices, eða nicc
MyAnswer$nicc <- nchar(gsub("[^0-9]+", "", MyAnswer$incorrectChoices))
#Set inn fjöldi svara framAd Thessu og hefséð áður
#MyAnswer <- MyAnswer[order(MyAnswer$timeStart),] %>% group_by(lectureId,studentId) %>% mutate(fsfat=row_number()-1)
MyAnswer <- MyAnswer %>% arrange(timeStart) %>% group_by(lectureId,studentId) %>% mutate(fsfat=row_number()-1)
hashAnswer <- inner_join(MyAnswer,hashes) %>%
pivot_longer(c(hash,hash2,hash3),values_to = "hash") %>% filter(!is.na(hash))
#hashAnsdag <- full_join(hashAnswer,minstadagsetning)
unique(hashAnswer$lectureId)
hashAnsdag$hsta <- ifelse(hashAnsdag$mindag==hashAnsdag$timeStart,0,1)
library(dbplyr)
library(dplyr)
library(RMySQL)
library(tidyr)
library(MASS)
library(ggplot2)
library(magrittr)
library(lubridate)
#les inn öll gögninn, nota mestalagi bara answer gagnasafnið
twDb<-src_mysql("tw_quizdb", host = "127.0.0.1", port = 3306, user = "gss24", password = "JuwofKWT2Ewc")
answer<-tbl(twDb,"answer")
question<-tbl(twDb,"question")
lectureStudentSetting<-tbl(twDb,"lectureStudentSetting")
#hashes<-read.csv("Data/bighashfile.txt",sep=" ",col.names = c("dir","qName","hash","numQ","notaType"))
hashes<-read.csv("Data/bighashfile.wide.txt",sep=" ",col.names = c("dir","qName","hash","hash2","hash3","numQ","notaType"),na.strings = ".")
#pathQ<-unique(paste(hashes$dir,hashes$qName,sep=""))
plonePath<-unique(paste(hashes$dir,hashes$qName,sep=""))
plonePath<-as.data.frame(plonePath)
hashes$plonePath<-paste(hashes$dir,hashes$qName,sep="")
left_join(plonePath,as.data.frame(question))->myQuestions
#question%>%filter(plonePath%in%pathQ)->myQuestions
#myQuestions<-as.data.frame(myQuestions)
answer%>%filter(timeStart>"2020-01-01 00:01:01")->answerRed
answerRed<-as.data.frame(answerRed)
# view(answerRed)
# studentgpow <- lectureStudentSetting %>% as.data.frame() %>% filter(key == "iaa_adaptive_gpow" & creationDate > "2020-01-01 00:01:01") %>%
# dplyr::select(lectureId, studentId, lectureVersion, value, creationDate)
inner_join(answerRed,myQuestions) -> myAnswer
MyAnswer<-as.data.frame(myAnswer)
# View(MyAnswer)
# explory <- left_join(MyAnswer, studentgpow)
#
# explory %>% filter(is.na(value)) %>% group_by(lectureId, lectureVersion) %>% summarise(n()) %>% View()
# explory %>% filter(!is.na(value)) %>% group_by(lectureId, lectureVersion) %>% summarise(n())
# explory %>% group_by(lectureId, lectureVersion, studentId) %>% summarise("count" = n_distinct(value)) %>% filter(count>1)
# naexplore <- explory %>% filter(any(is.na(value)))
# explory %>% filter(lectureId == '3203') %>% dplyr::select(lectureId, studentId, timeStart, value) %>% View()
# table(naexplore$title)
# explory  %>% group_by(lectureId, lectureVersion) %>%
#   summarise("check.na" = sum(is.na(value)), "check.notna" = sum(!is.na(value)))
#   filter(check.na > 0 & check.notna > 0)
#
# explory %>% summarise(n_distinct(lectureId, lectureVersion))
#bæti við fjölda incorrect choices, eða nicc
MyAnswer$nicc <- nchar(gsub("[^0-9]+", "", MyAnswer$incorrectChoices))
#Set inn fjöldi svara framAd Thessu og hefséð áður
#MyAnswer <- MyAnswer[order(MyAnswer$timeStart),] %>% group_by(lectureId,studentId) %>% mutate(fsfat=row_number()-1)
MyAnswer <- MyAnswer %>% arrange(timeStart) %>% group_by(lectureId,studentId) %>% mutate(fsfat=row_number()-1)
hashAnswer <- inner_join(MyAnswer,hashes) %>%
pivot_longer(c(hash,hash2,hash3),values_to = "hash") %>% filter(!is.na(hash))
# explory <- left_join(hashAnswer, studentgpow)
hashAnsdag <- hashAnswer %>% group_by(studentId,hash) %>% mutate('mindag'=min(timeStart))
#hashAnsdag <- full_join(hashAnswer,minstadagsetning)
#unique(hashAnswer$lectureId)
hashAnsdag$hsta <- ifelse(hashAnsdag$mindag==hashAnsdag$timeStart,0,1)
#hashAnsdag <- hashAnsdag %>% mutate("dtStart"=ymd_hms(.$timeStart),"dtEnd"=ymd_hms(.$timeEnd))
hashAnsdag$dtStart <- ymd_hms(hashAnsdag$timeStart)
hashAnsdag$dtEnd <- ymd_hms(hashAnsdag$timeEnd)
hashAnsdag <-  hashAnsdag %>% group_by(studentId, hash, timeStart) %>% arrange(studentId,hash, timeStart)
hashAnsdag$timeDif <- hashAnsdag %>% arrange(studentId, hash, timeStart) %$%
ifelse(hash==lag(hash,1),as.duration(dtStart-lag(dtEnd)),NA)
# ?lag
# View(hashAnsdag %>% arrange(studentId, hash, timeStart))
#setjum inn fsvfat sem er fjöldi svara fram að þessu
hashAnsdag$sumable <- ifelse(hashAnsdag$hsta==0,1,0)
hashAnsdag <- hashAnsdag %>% group_by(studentId,lectureId) %>% arrange(timeStart) %>% mutate(fsvfat=cumsum(sumable)-1)
hashAnsdag <- hashAnsdag %>% group_by(lectureId, studentId, timeStart) %>% mutate(fsvfatu = min(fsvfat))
hashAnsdag4 <- hashAnsdag[!grepl('NOTA+',hashAnsdag$hash),]
#Vel dálka og save-a
hashanswers <- hashAnsdag %>% dplyr::select(lectureId,studentId,questionId,correct,hash,fsfat,fsvfat, fsvfatu,hsta,timeDif, nicc)
hashanswers4 <- hashAnsdag4 %>% dplyr::select(lectureId,studentId,questionId,correct,hash,fsfat,fsvfat, fsvfatu,hsta,timeDif, nicc)
write.csv(hashanswers,'Data/hashAnswer.csv')
write.csv(hashanswers4,'Data/hashAnswer4.csv')
unique(hashAnsdag$lectureId)
hashAnswer <- read.csv('Data/hashAnswer4.csv')
hashAnswer <- hashAnswer %>% subset(select=-c(X))
unique(hashAnswer$lectureId)
lectureStudentSetting %>% filter(lectureId == 3203 & key == "iaa_adaptive_gpow") %>% summarise(n())
#unique(hashAnsdag$lectureId)
MyAnswer %>% filter(lectureId == 3203) %>% summarise(n_distinct(studentId))
#unique(hashAnsdag$lectureId)
answerRed %>% filter(lectureId == 3203) %>% summarise(n_distinct(studentId))
#unique(hashAnsdag$lectureId)
myAnswer %>% filter(lectureId == 3203) %>% summarise(n_distinct(studentId))
FHbylim <- ab %>% pivot_longer(c('FY50', 'HY50', 'FY100', 'HY100', 'FY150', 'HY150', 'FY200', 'HY200', 'FY250', 'HY250', 'FY300', 'HY300'),
names_to = "typewLim", values_to = "values") %>%
separate(typewLim, into = c("type", "limit"), sep = 2) %>% pivot_wider(names_from = type, values_from = values)
library(dbplyr)
library(dplyr)
library(RMySQL)
library(tidyr)
library(MASS)
library(ggplot2)
library(gridExtra)
library(tidyverse)
library(modelr)
library(rlang)
library(lme4)
hashAnswer <- read.csv('Data/hashAnswer4.csv')
hashAnswer <- hashAnswer %>% subset(select=-c(X))
hashAnswer$hsta <- hashAnswer$hsta%>%as.character()
hashAnswer$lectureId <- hashAnswer$lectureId %>% as.factor()
hashAnswer$studentId <- hashAnswer$studentId %>% as.factor()
hashAnswer$nicc <- hashAnswer$nicc %>% as.factor()
hashAnswer$fsfat <- hashAnswer$fsfat/10
hashAnswer$fsvfatu <- hashAnswer$fsvfatu/10
a <- hashAnswer %>% summarise("FY50" = sum(fsfat >= 5), "FY100" = sum(fsfat >= 10),
"FY150" = sum(fsfat >= 15), "FY200" = sum(fsfat >= 20),
"FY250" = sum(fsfat >= 25), "FY300" = sum(fsfat >= 30))
b <- hashAnswer %>% summarise("HY50" = mean(fsfat >= 5), "HY100" = mean(fsfat >= 10),
"HY150" = mean(fsfat >= 15), "HY200" = mean(fsfat >= 20),
"HY250" = mean(fsfat >= 25), "HY300" = mean(fsfat >= 30))
ab <- cbind(a, b)
FHbylim <- ab %>% pivot_longer(c('FY50', 'HY50', 'FY100', 'HY100', 'FY150', 'HY150', 'FY200', 'HY200', 'FY250', 'HY250', 'FY300', 'HY300'),
names_to = "typewLim", values_to = "values") %>%
separate(typewLim, into = c("type", "limit"), sep = 2) %>% pivot_wider(names_from = type, values_from = values)
FHbylim
library(dbplyr)
library(dplyr)
library(RMySQL)
library(tidyr)
library(MASS)
library(ggplot2)
library(magrittr)
library(lubridate)
#les inn öll gögninn, nota mestalagi bara answer gagnasafnið
twDb<-src_mysql("tw_quizdb", host = "127.0.0.1", port = 3306, user = "gss24", password = "JuwofKWT2Ewc")
answer<-tbl(twDb,"answer")
question<-tbl(twDb,"question")
lectureStudentSetting<-tbl(twDb,"lectureStudentSetting")
#hashes<-read.csv("Data/bighashfile.txt",sep=" ",col.names = c("dir","qName","hash","numQ","notaType"))
hashes<-read.csv("Data/bighashfile.wide.txt",sep=" ",col.names = c("dir","qName","hash","hash2","hash3","numQ","notaType"),na.strings = ".")
#pathQ<-unique(paste(hashes$dir,hashes$qName,sep=""))
plonePath<-unique(paste(hashes$dir,hashes$qName,sep=""))
plonePath<-as.data.frame(plonePath)
hashes$plonePath<-paste(hashes$dir,hashes$qName,sep="")
left_join(plonePath,as.data.frame(question))->myQuestions
#question%>%filter(plonePath%in%pathQ)->myQuestions
#myQuestions<-as.data.frame(myQuestions)
answer%>%filter(timeStart>"2020-01-01 00:01:01")->answerRed
answerRed<-as.data.frame(answerRed)
# view(answerRed)
# studentgpow <- lectureStudentSetting %>% as.data.frame() %>% filter(key == "iaa_adaptive_gpow" & creationDate > "2020-01-01 00:01:01") %>%
# dplyr::select(lectureId, studentId, lectureVersion, value, creationDate)
inner_join(answerRed,myQuestions) -> myAnswer
MyAnswer<-as.data.frame(myAnswer)
View(MyAnswer)
MyAnswer %>% filter(lectureId == 3203) %>% View()
# view(answerRed)
studentgpow <- lectureStudentSetting %>% as.data.frame() %>% filter(key == "iaa_adaptive_gpow" & creationDate > "2020-01-01 00:01:01") %>%
dplyr::select(lectureId, studentId, lectureVersion, value, creationDate)
# View(MyAnswer)
explory <- left_join(MyAnswer, studentgpow)
explory %>% filter(is.na(value)) %>% group_by(lectureId, lectureVersion) %>% summarise(n()) %>% View()
MyAnswer %>% filter(lectureId == 3082) %>% View()
tmp <- unique(hashAnswer$lectureId)[-1]
hashAnswer <- read.csv('Data/hashAnswer4.csv')
tmp <- unique(hashAnswer$lectureId)[-1]
possiblegpow %>% filter(lectureId %in% tmp & key == "iaa_adaptive_gpow") %>%  View()
lectureStudentSetting %>% filter(lectureId %in% tmp & key == "iaa_adaptive_gpow") %>% summarise(n())
tmp2 <- unique(hashAnswer$lectureId)
lectureStudentSetting %>% filter(lectureId %in% tmp2 & key == "iaa_adaptive_gpow") %>% summarise(n())
lectureStudentSetting %>% filter(lectureId %in% tmp & key == "iaa_adaptive_gpow") %>% summarise(n())
library(kableExtra)
hashAnswer <- read.csv('Data/hashAnswer4.csv')
hashAnswer <- hashAnswer %>% subset(select=-c(X))
hashAnswer$hsta <- hashAnswer$hsta%>%as.character()
hashAnswer$lectureId <- hashAnswer$lectureId %>% as.factor()
hashAnswer$studentId <- hashAnswer$studentId %>% as.factor()
hashAnswer$nicc <- hashAnswer$nicc %>% as.factor()
hashAnswer$fsfat <- hashAnswer$fsfat/10
hashAnswer$fsvfatu <- hashAnswer$fsvfatu/10
ggplot(hashAnswer, aes(x = hsta)) +
geom_bar()
?geom_bar
prop.table(hashAnswer$correct)
table(prop.table(hashAnswer$correct))
table(hashAnswer$correct)
prop.table(table(hashAnswer$correct))
table(hashAnswer$hsta)
prop.table(table(hashAnswer$hsta))
table(hashAnswer$correct, hashAnswer$hsta)
prop.table(table(hashAnswer$correct, hashAnswer$hsta))
?table
prop.table(table(hashAnswer$correct+1, hashAnswer$hsta))
prop.table(table(hashAnswer$correct+1, hashAnswer$hsta), row.names = c("vitlaust", "rétt"))
prop.table(table(hashAnswer$correct+1, hashAnswer$hsta), row.names(c("vitlaust", "rétt")))
?prop.table
prop.table(table(hashAnswer$correct+1, hashAnswer$hsta, row.names = c("vitlaust", "rétt")))
prop.table(table(hashAnswer$correct+1, hashAnswer$hsta, row.names(c("vitlaust", "rétt")) ))
?table
corhsta <- prop.table(table(hashAnswer$correct+1, hashAnswer$hsta ))
row.names(corhsta) <- c("vitlaust", "rétt")
corhsta
corhsta <- prop.table(table(hashAnswer$correct+1, hashAnswer$hsta ), margin = 1)
corhsta
?prop.table
corhsta <- prop.table(table(hashAnswer$correct+1, hashAnswer$hsta ))
row.names(corhsta) <- c("vitlaust", "rétt")
row.names(corhsta) <- c("vitlaust", "rétt")
colnames(corhsta) <- c("fyrsta", "hef séð")
corhsta <- prop.table(table(hashAnswer$correct+1, hashAnswer$hsta ))
corhsta <- rbind(corhsta, c(sum(corhsta[,1]), sum(corhsta[,2])))
corhsta <- prop.table(table(hashAnswer$correct+1, hashAnswer$hsta ))
corhsta <- rbind(corhsta, c(sum(corhsta[,1]), sum(corhsta[,2])))
corhsta <- cbind(corhsta, c(sum(corhsta[1,]), sum(corhsta[2,]), sum(corhsta[3,])))
row.names(corhsta) <- c("vitlaust", "rétt", "samtals")
colnames(corhsta) <- c("fyrsta", "hef séð", "samtals")
corhsta
paste0(corhsta,"\%")
paste0(corhsta,"\\%")
paste0(corhsta,"%")
corhsta
prop.table(table(hashAnswer$correct+1, hashAnswer$hsta ), margin = 2)
prop.table(table(hashAnswer$correct+1, hashAnswer$hsta ), margin = 1)
correctnam <- ifelse(hashAnswer$correct == 1, "rétt", "vitlaust")
hstanam <- ifelse(hashAnswer$hsta == "1", "Hef séð áður", "nýtt")
prop.table(table(correctnam, hstanam ), margin = 1)
prop.table(table(correctnam, hstanam ), margin = 2)
