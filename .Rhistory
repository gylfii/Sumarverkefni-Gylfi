write.csv(dAnswer,"C:\Users\gylfi\Desktop\R powaaa\Vinna\spurning 4 verkefni\answer.csv",row.names=False)
write.csv(dAnswer,"C:\Users\gylfi\Desktop\R powaaa\Vinna\spurning 4 verkefni\\answer.csv",row.names=False)
write.csv(dAnswer,"C:\\Users\\gylfi\\Desktop\\R powaaa\\Vinna\\spurning 4 verkefni\\answer.csv",row.names=False)
write.csv(dAnswer,"C:\\Users\\gylfi\\Desktop\\R powaaa\\Vinna\\spurning 4 verkefni\\answer.csv",row.names=FALSE)
setwd("C:/Users/gylfi/Desktop/R powaaa/Vinna/spurning 4 verkefni")
setwd("C:/Users/gylfi/Desktop/R powaaa/Vinna/spurning 4 verkefni")
help("read.csv")
answer <- read.csv("answer.csv")
minstadagsetningA <- answer %>% group_by(questionId,studentId) %>% summarise('mindag'=min(timeStart))
alltmeddag <- full_join(answer,minstadagsetningA)
allsvor <- alltmeddag %>% subset(select =  -c(practice,coinsAwarded,ugQuestionGuid,lectureVersion))
allsvor$hefsedtheddaAdur <- ifelse(allsvor$timeStart==allsvor$mindag,0,1)
allsvor$fjoldiSvaraFramAdThessu <- allsvor %>% with(ave(timeStart,1,lectureId,studentId,FUN = seq_along))
help("barplot")
View(allsvor)
fyrirstytt <- fyrirmeddag %>% subset(select =  -c(practice,coinsAwarded,ugQuestionGuid,lectureVersion))
allsvor <- alltmeddag %>% subset(select =  -c(practice,coinsAwarded,ugQuestionGuid))
allsvor$hefsedtheddaAdur <- ifelse(allsvor$timeStart==allsvor$mindag,0,1)
allsvor$fjoldiSvaraFramAdThessu <- allsvor %>% with(ave(timeStart,1,lectureId,studentId,FUN = seq_along))
answer$lectureVersion %>% min()
help("min")
answer$lectureVersion %>% min(na.rm = TRUE)
answer$lectureVersion %>% max(na.rm = TRUE)
allsvor %>%table(allsvor$lectureVersion,useNA="ifany") %>% barplot(main="skodun fjolda sem NA",width=c(1,71))
allsvor$lectureVersion %>%table(useNA="ifany") %>% barplot(main="skodun fjolda sem NA",width=c(1,71))
allsvor$lectureVersion %>%table(useNA="ifany") %>% barplot(main="skodun fjolda sem NA",las=80)
help("barplot")
allsvor$lectureVersion %>%table(useNA="ifany") %>% barplot(main="skodun fjolda sem NA",width = 72)
install.packages("ggplot2")
library(ggplot2)
help("geom_bar")
help("geom_histogram")
allsvor$lectureVersion %>%table(useNA="ifany") %>% ggplot(aes(x=lectuVersion))+geom_histogram(binwidth = 72)
lec<-allsvor$lectureVersion %>%table(useNA="ifany") %>% as.data.frame()
allsvor$lectureVersion %>%table(useNA="ifany") %>% as.data.frame()
#barplot(main="skodun fjolda sem NA",width = 72)
help("table")
summary(allsvor)
2427025/3293069
cov(allsvor)
#barplot(main="skodun fjolda sem NA",width = 72)
help("cov")
cov(as.data.frame(allsvor$grade,allsvor$fjoldiSvaraFramAdThessu))
cov(as.data.frame(allsvor$grade,allsvor$fjoldiSvaraFramAdThessu),na.rm=T)
cov(as.data.frame(allsvor$grade,allsvor$fjoldiSvaraFramAdThessu),use = "na.or.complete")
cov(as.data.frame(allsvor$correct,allsvor$fjoldiSvaraFramAdThessu),use = "na.or.complete")
cor(allsvor)
help("cor")
cor(allsvor,use = "complete.obs")
forcor <- as.data.frame(cbind(allsvor$chosenAnswer,allsvor$grade,allsvor$correct,allsvor$hefsedtheddaAdur,allsvor$fjoldiSvaraFramAdThessu))
cor(forcor)
forcor <- allsvor %>% subset(select = c(chosenAnswer,grade,correct,hefsedtheddaAdur,fjoldiSvaraFramAdThessu))
cor(forcor)
forcor$fjoldiSvaraFramAdThessu <- forcor$fjoldiSvaraFramAdThessu %>% as.numeric()
cor(forcor)
cor(forcor,na.rm=T)
cor(forcor,use = "na.or.complete")
cov(forcor,use = "na.or.complete")
View(alltmeddag)
rm(alltmeddag,forcor)
#les inn öll gögninn, nota mestalagi bara answer gagnasafnið
twDb<-src_mysql("tw_quizdb", host = "127.0.0.1", port = 3306, user = "gss24", password = "JuwofKWT2Ewc")
question <- tbl(twDb,"question")
glimpse(question)
question %>% summarize("count"=n())
skoda <- answer %>% filter(timeStart>'2020-01-01 01:00:00')
install.packages("rmdformats")
install.packages("hash")
library(hash)
manyAota <- hash("manyAOTAsPois.hash")
manyAota <- read.csv("manyAOTAsPois")
manyAota <- read.csv("manyAOTAsPois.hash")
View(manyAota)
manyAota <- read.csv("manyAOTAsPois.hash",header = FALSE)
View(manyAota)
#les inn gagnasafnið sem var save-að
help("read.csv")
manyAota <- read.csv("manyAOTAsPois.hash",header = FALSE,sep = " ")
View(manyAota)
getwd()
glimpse(question)
question%>%dplyr::select(plonePath,questionId)->miniQ
miniQ<-as.data.frame(miniQ)
grep("Qgen-q2297",miniQ$plonePath)
grep("Qgen-q2297",miniQ$plonePath)
miniQ[grep("Qgen-q2297",miniQ$plonePath),]
grep("Qgen-q2296",miniQ$plonePath)
miniQ[grep("Qgen-q2296",miniQ$plonePath),]
grep("Qgen-q2215",miniQ$plonePath)
miniQ[grep("Qgen-q2215",miniQ$plonePath),]
grep("Qgen-q2100",miniQ$plonePath)
miniQ[grep("Qgen-q2100",miniQ$plonePath),]
#les inn öll gögninn, nota mestalagi bara answer gagnasafnið
twDb<-src_mysql("tw_quizdb", host = "127.0.0.1", port = 3306, user = "gss24", password = "JuwofKWT2Ewc")
library(dbplyr)
library(dplyr)
library(RMySQL)
library(tidyr)
library(MASS)
library(ggplot2)
library(hash)
#les inn öll gögninn, nota mestalagi bara answer gagnasafnið
twDb<-src_mysql("tw_quizdb", host = "127.0.0.1", port = 3306, user = "gss24", password = "JuwofKWT2Ewc")
answer <- tbl(twDb, "answer")
manyAota <- read.csv("manyAOTAsPois.hash",header = FALSE,sep = " ")
manyAota <- read.csv("manyAOTAsPois.hash",header = FALSE,sep = " ")
manyAota <- read.csv("Data/manyAOTAsPois.hash",header = FALSE,sep = " ")
answer %>% summarise("count"=n())
View(manyAota)
View(manyAota)
Hashvinnsla <- read.csv("Data/bighashfile.txt",header = FALSE,sep = " ")
View(Hashvinnsla)
question <- tbl(twDb,"question")
answer <- answer%>% filter(timeStart>'2020-01-01 01:00:00')
answer %>% summarise("count"=n())
glimpse(question)
question%>%dplyr::select(plonePath,questionId)->miniQ
miniQ<-as.data.frame(miniQ)
#les inn öll gögninn, nota mestalagi bara answer gagnasafnið
twDb<-src_mysql("tw_quizdb", host = "127.0.0.1", port = 3306, user = "gss24", password = "JuwofKWT2Ewc")
miniQ<-as.data.frame(miniQ)
answer <- tbl(twDb, "answer")
answer <- answer%>% filter(timeStart>'2020-01-01 01:00:00')
question <- tbl(twDb,"question")
Hashvinnsla <- read.csv("Data/bighashfile.txt",header = FALSE,sep = " ")
glimpse(question)
# Skoða aðeins tengingarnar
question%>%dplyr::select(plonePath,questionId)->miniQ
paste(Hashvinnsla$V1,Hashvinnsla$V2)
glimpse(question)
test <- paste(Hashvinnsla$V1,Hashvinnsla$V2)
paste(Hashvinnsla$V1,Hashvinnsla$V2) %>% gsub(pattern = " ",replacement = "")
glimpse(question)
Hashvinnsla$plonePath <- paste(Hashvinnsla$V1,Hashvinnsla$V2) %>% gsub(pattern = " ",replacement = "")
miniQ<-as.data.frame(miniQ)
test <- full_join(miniQ,Hashvinnsla)
View(test)
test <- right_join(miniQ,Hashvinnsla)
answer <- as.data.frame(answer)
prufa <- right_join(answer,test)
prufa <- prufa %>% select(answerId,lectureId,studentId,questionId,correct,timeStart,V3,V4,V5)
prufa <- prufa %>% select(-answerId,lectureId,studentId,questionId,correct,timeStart,V3,V4,V5)
prufa <- prufa %>% dplyr::select(answerId,lectureId,studentId,questionId,correct,timeStart,V3,V4,V5)
View(prufa)
glimpse(prufa)
summary(prufa)
prufa <- inner_join(answer,test)
prufa <- prufa %>% dplyr::select(answerId,lectureId,studentId,questionId,correct,timeStart,V3,V4,V5)
summary(prufa)
prufa <- inner_join(answer,test)
View(prufa)
View(miniQ)
test %>%dplyr::select(questionId) %>% duplicated() %>% sum
answer %>%dplyr::select(questionId) %>% duplicated() %>% sum
glimpse(question)
prufa %>%dplyr::select(questionId) %>% duplicated() %>% sum
quest <- as.data.frame(question)
test2 <- right_join(miniQ,Hashvinnsla)
View(test2)
test2 <- right_join(quest,Hashvinnsla)
View(test2)
test2 %>%dplyr::select(questionId) %>% duplicated() %>% sum
prufa <- inner_join(answer,test2)
View(prufa)
View(Hashvinnsla)
View(quest)
Hashvinnsla %>%dplyr::select(plonePath) %>% duplicated() %>% sum
Sys.setlocale("LC_ALL", "is_IS.UTF-8")
twDb<-src_mysql("tw_quizdb", host = "127.0.0.1", port = 3306, user = "gss24", password = "JuwofKWT2Ewc")
student<-tbl(twDb,"student")
answer<-tbl(twDb,"answer")
lecture<-tbl(twDb,"lecture")
host<-tbl(twDb,"host")
twDb<-src_mysql("tw_quizdb", host = "127.0.0.1", port = 3306, user = "gss24", password = "JuwofKWT2Ewc")
student<-tbl(twDb,"student")
answer<-tbl(twDb,"answer")
lecture<-tbl(twDb,"lecture")
host<-tbl(twDb,"host")
coinAward<-tbl(twDb,"coinAward")
lectureStudentSetting<-tbl(twDb,"lectureStudentSetting")
lectureStudentSetting%>%group_by(key)%>%summarise(stdev=sd(value,na.rm=T),stdevlog=sd(log2(value),na.rm=T))->stdevs
hashes<-read.csv("/Users/gstefans/Dropbox/education/sumar2020/tw/hash/bighashfile.txt",sep=" ",col.names = c("dir","qName","hash","numQ","notaType"))
pathQ<-unique(paste(hashes$dir,hashes$qName,sep=""))
question%>%filter(plonePath%in%pathQ)->myQuestions
answer%>%filter(timeStart>"2020-01-01 00:01:01")->answerRed
inner_join(answerRed,myQuestions) -> myAnswer
hashes<-read.csv("Data/bighashfile.txt",sep=" ",col.names = c("dir","qName","hash","numQ","notaType"))
pathQ<-unique(paste(hashes$dir,hashes$qName,sep=""))
question%>%filter(plonePath%in%pathQ)->myQuestions
answer%>%filter(timeStart>"2020-01-01 00:01:01")->answerRed
inner_join(answerRed,myQuestions) -> myAnswer
library(Matrix)
library(dbplyr)
library(dplyr)
library(RMySQL)
library(RMySQL)
library(MASS)
twDb<-src_mysql("tw_quizdb", host = "127.0.0.1", port = 3306, user = "gss24", password = "JuwofKWT2Ewc")
student<-tbl(twDb,"student")
answer<-tbl(twDb,"answer")
lecture<-tbl(twDb,"lecture")
host<-tbl(twDb,"host")
coinAward<-tbl(twDb,"coinAward")
lectureStudentSetting<-tbl(twDb,"lectureStudentSetting")
lectureStudentSetting%>%group_by(key)%>%summarise(stdev=sd(value,na.rm=T),stdevlog=sd(log2(value),na.rm=T))->stdevs
hashes<-read.csv("Data/bighashfile.txt",sep=" ",col.names = c("dir","qName","hash","numQ","notaType"))
pathQ<-unique(paste(hashes$dir,hashes$qName,sep=""))
question%>%filter(plonePath%in%pathQ)->myQuestions
question <- tbl(twDb,"question")
question%>%filter(plonePath%in%pathQ)->myQuestions
answer%>%filter(timeStart>"2020-01-01 00:01:01")->answerRed
inner_join(answerRed,myQuestions) -> myAnswer
glimpse(myAnswer)
myAnswer %>% summarise(n())
MyAnswer <- as.data.frame(myAnswer)
View(MyAnswer)
#prufa að joina nokkuð saman
hashes$plonePath <- pathQ
#prufa að joina nokkuð saman
hashes$plonePath <- paste(hashes$dir,hashes$qName,sep="")
View(MyAnswer)
prufa2 <- inner_join(MyAnswer,hashes)
View(prufa2)
question %>% dplyr::select(questionId) %>%duplicated() %>% sum
source('~/Sumarverkefni-Gylfi/Script/Settings.R')
knitr::opts_chunk$set(echo = TRUE)
source('Settings.R')
knitr::opts_chunk$set(echo = TRUE)
source('Settings.R')
#setja upp Svörinn sem við ætlum að skoða
hashes<-read.csv("Data/bighashfile.txt",sep=" ",col.names = c("dir","qName","hash","numQ","notaType"))
View(hashes)
hashc <- hashes[-grep("NOTA+",hashes$hash)]
hashc <- hashes[-grep("NOTA+",hashes$hash),]
hashc %>%dplyr::select(hash) %>% duplicated() %>% sum
library(dbplyr)
library(dplyr)
library(RMySQL)
library(tidyr)
library(MASS)
library(ggplot2)
library(hash)
hashc %>%dplyr::select(hash) %>% duplicated() %>% sum
#les inn öll gögninn, nota mestalagi bara answer gagnasafnið
twDb<-src_mysql("tw_quizdb", host = "127.0.0.1", port = 3306, user = "gss24", password = "JuwofKWT2Ewc")
question <- tbl(twDb,"question")
question%>%filter(plonePath%in%pathQ)->myQuestions
glimpse(myQuestion)
glimpse(myQuestions)
View(hashes)
#setja upp Svörinn sem við ætlum að skoða
hashes<-read.csv("Data/bighashfile.txt",sep=" ",col.names = c("dir","qName","hash","numQ","notaType"))
View(hashes)
#setja upp Svörinn sem við ætlum að skoða
hashes<-read.csv("Data/bighashfile.txt",sep=" ",col.names = c("dir","qName","hash","numQ","notaType"))
View(hashes)
hasht <- read.csv("C:\Users\gylfi\Documents\temp\bighashfile.txt",sep=" ",col.names = c("dir","qName","hash","numQ","notaType"))
hasht <- read.csv("C:\\Users\\gylfi\\Documents\\temp\\bighashfile.txt",sep=" ",col.names = c("dir","qName","hash","numQ","notaType"))
View(hasht)
View(hasht)
hasht$plonePath <- paste(hasht$dir,hasht$qName,sep="")
View(hasht)
hasht %>%dplyr::select(plonePath) %>% duplicated() %>% sum
library(dbplyr)
library(dplyr)
library(RMySQL)
library(tidyr)
library(MASS)
library(ggplot2)
library(hash)
hasht %>%dplyr::select(plonePath) %>% duplicated() %>% sum
hasht %>%dplyr::select(plonePath,hash) %>% duplicated() %>% sum
cat bighashfile.txt|awk '/NOTA/{print $1,$2}'|sort|uniq -c|sort -n|tail
hasht %>%dplyr::select(plonePath) %>% duplicated() %>% sum
hasht <-hasht[-grep("AOTA+",hasht$notaType)]
hasht %>%dplyr::select(plonePath) %>% duplicated() %>% sum
hasht <- read.csv("C:\\Users\\gylfi\\Documents\\temp\\bighashfile.txt",sep=" ",col.names = c("dir","qName","hash","numQ","notaType"))
hasht$plonePath <- paste(hasht$dir,hasht$qName,sep="")
hasht <-hasht[-grep("AOTA+",hasht$notaType),]
hasht %>%dplyr::select(plonePath) %>% duplicated() %>% sum
#setja upp Svörinn sem við ætlum að skoða
hashes<-read.csv("Data/bighashfile.txt",sep=" ",col.names = c("dir","qName","hash","numQ","notaType"))
#prufa að joina nokkuð saman
hashes$plonePath <- paste(hashes$dir,hashes$qName,sep="")
hasht <-hashes[-grep("AOTA+",hashes$notaType),]
hasht %>%dplyr::select(plonePath) %>% duplicated() %>% sum
#les inn öll gögninn, nota mestalagi bara answer gagnasafnið
twDb<-src_mysql("tw_quizdb", host = "127.0.0.1", port = 3306, user = "gss24", password = "JuwofKWT2Ewc")
answer <- tbl(twDb, "answer")
answer <- answer%>% filter(timeStart>'2020-01-01 01:00:00')
question <- tbl(twDb,"question")
pathQ<-unique(paste(hashes$dir,hashes$qName,sep=""))
question%>%filter(plonePath%in%pathQ)->myQuestions
answer%>%filter(timeStart>"2020-01-01 00:01:01")->answerRed
inner_join(answerRed,myQuestions) -> myAnswer
prufa2 <- inner_join(MyAnswer,hashes)
View(prufa2)
prufa2 <- inner_join(myAnswer,hashes)
as.data.frame(myAnswer) -> MyAnswer
prufa2 <- inner_join(myAnswer,hashes)
prufa2 <- inner_join(MyAnswer,hashes)
View(prufa2)
#Set inn fjöldi svara framAd Thessu og hefséð áður
MyAnswer$FjoldiSvaraFramAdThessu <- MyAnswer %>% with(ave(timeStart,1,lectureId,studentId,FUN = seq_along))
View(MyAnswer)
skodun <- MyAnswer%>% dplyr::select(lectureId,studentId,questionId,timeStart,FjoldiSvaraFramAdThessu)
View(skodun)
'2020-04-03 15:32:00'<'2020-04-03 15:30:08'
?seq_along
?with
?ave
MyAnswer$FjoldiSvaraFramAdThessu <- ave(MyAnswer$timeStart,MyAnswer$lectureId,MyAnswer$studentId,Fun=seq_along)
temp <- MyAnswer[order(timeStart),]
temp <- MyAnswer[order(MyAnswer$timeStart),]
View(temp)
temp <- MyAnswer %>% group_by(lectureId,studentId,grp=data.table::rleid(timeStart)) %>% mutate(seq1=row_number())
View(temp)
skodun <- temp%>% dplyr::select(lectureId,studentId,questionId,timeStart,grp)
View(temp)
View(skodun)
#Set inn fjöldi svara framAd Thessu og hefséð áður
MyAnswer$fsfat <- MyAnswer %>% with(ave(timeStart,1,lectureId,studentId,FUN = seq_along))
skodun <- MyAnswer%>% dplyr::select(lectureId,studentId,questionId,timeStart,fsfat)
View(skodun)
temp <- MyAnswer %>% group_by(lectureId,studentId) %>% mutate(id=row_number())
skodun <- MyAnswer%>% dplyr::select(lectureId,studentId,questionId,timeStart,fsfat)
skodun <- temp%>% dplyr::select(lectureId,studentId,questionId,timeStart,id)
View(skodun)
temp <- MyAnswer %>% group_by(lectureId,studentId) %>% mutate(id=timeStart)
skodun <- temp%>% dplyr::select(lectureId,studentId,questionId,timeStart,id)
View(temp)
View(skodun)
View(skodun)
temp <- MyAnswer %>% group_by(lectureId,studentId) %>% mutate(id=with(ave(timeStart,1,Fun=seq_along))
temp <- MyAnswer %>% group_by(lectureId,studentId) %>% mutate(id=with(ave(timeStart,1,Fun=seq_along)))
temp <- MyAnswer %>% group_by(lectureId,studentId) %>% mutate(id=with(ave(timeStart,1,Fun=seq_along)))
temp <- MyAnswer[order(MyAnswer$timeStart),] %>% group_by(lectureId,studentId) %>% mutate(id=)
temp <- MyAnswer[order(MyAnswer$timeStart),] %>% group_by(lectureId,studentId) %>% mutate(id=row_number())
skodun <- temp%>% dplyr::select(lectureId,studentId,questionId,timeStart,id)
View(skodun)
#les inn öll gögninn, nota mestalagi bara answer gagnasafnið
twDb<-src_mysql("tw_quizdb", host = "127.0.0.1", port = 3306, user = "gss24", password = "JuwofKWT2Ewc")
answer <- tbl(twDb, "answer")
answer <- answer%>% filter(timeStart>'2020-01-01 01:00:00')
question <- tbl(twDb,"question")
#setja upp Svörinn sem við ætlum að skoða
hashes<-read.csv("Data/bighashfile.txt",sep=" ",col.names = c("dir","qName","hash","numQ","notaType"))
pathQ<-unique(paste(hashes$dir,hashes$qName,sep=""))
question%>%filter(plonePath%in%pathQ)->myQuestions
answer%>%filter(timeStart>"2020-01-01 00:01:01")->answerRed
inner_join(answerRed,myQuestions) -> myAnswer
as.data.frame(myAnswer) -> MyAnswer
#Set inn fjöldi svara framAd Thessu og hefséð áður
MyAnswer$fsfat <- MyAnswer %>% with(ave(timeStart,1,lectureId,studentId,FUN = seq_along))
MyAnswer <- MyAnswer[order(MyAnswer$timeStart),] %>% group_by(lectureId,studentId) %>% mutate(fsfat=row_number()-1)
skodun <- MyAnswer%>% dplyr::select(lectureId,studentId,questionId,timeStart,fsfat)
View(skodun)
hashAnswer <- inner_join(hashes,MyAnswer)
hashes$plonePath <- paste(hashes$dir,hashes$qName,sep="")
hashAnswer <- inner_join(hashes,MyAnswer)
View(hashAnswer)
hashAnswer <- inner_join(MyAnswer,hashes)
View(hashAnswer)
#les inn öll gögninn, nota mestalagi bara answer gagnasafnið
twDb<-src_mysql("tw_quizdb", host = "127.0.0.1", port = 3306, user = "gss24", password = "JuwofKWT2Ewc")
answer <- tbl(twDb, "answer")
answer <- answer%>% filter(timeStart>'2020-01-01 01:00:00')
question <- tbl(twDb,"question")
library(dbplyr)
library(dplyr)
library(RMySQL)
library(tidyr)
library(MASS)
library(ggplot2)
library(hash)
#les inn öll gögninn, nota mestalagi bara answer gagnasafnið
twDb<-src_mysql("tw_quizdb", host = "127.0.0.1", port = 3306, user = "gss24", password = "JuwofKWT2Ewc")
answer <- tbl(twDb, "answer")
answer <- answer%>% filter(timeStart>'2020-01-01 01:00:00')
question <- tbl(twDb,"question")
# hasht <- read.csv("C:\\Users\\gylfi\\Documents\\temp\\bighashfile.txt",sep=" ",col.names = c("dir","qName","hash","numQ","notaType"))
# hasht$plonePath <- paste(hasht$dir,hasht$qName,sep="")
#setja upp Svörinn sem við ætlum að skoða
hashes<-read.csv("Data/bighashfile.txt",sep=" ",col.names = c("dir","qName","hash","numQ","notaType"))
hashes$plonePath <- paste(hashes$dir,hashes$qName,sep="")
pathQ<-unique(paste(hashes$dir,hashes$qName,sep=""))
question%>%filter(plonePath%in%pathQ)->myQuestions
answer%>%filter(timeStart>"2020-01-01 00:01:01")->answerRed
inner_join(answerRed,myQuestions) -> myAnswer
as.data.frame(myAnswer) -> MyAnswer
#Set inn fjöldi svara framAd Thessu og hefséð áður
#MyAnswer$fsfat <- MyAnswer %>% with(ave(timeStart,1,lectureId,studentId,FUN = seq_along))
MyAnswer <- MyAnswer[order(MyAnswer$timeStart),] %>% group_by(lectureId,studentId) %>% mutate(fsfat=row_number()-1)
hashAnswer <- inner_join(MyAnswer,hashes)
as.data.frame(myAnswer) -> MyAnswer2
minstadagsetning <- hashAnswer %>% group_by(studentId,hash) %>% summarise('mindag'=min(timeStart))
hashAnsdag <- full_join(hashAnswer,minstadagsetning)
hashAnsdag$hsta <- ifelse(hashAnsdag$mindag==hashAnsdag$timeStart,0,1)
hashanswers <- hashAnsdag %>% dplyr::select(lectureId,studentId,questionId,correct,fsfat,hsta)
write.csv(hashanswers,'Data/hashAnswer.csv')
#lesum inn gögninn okkar
hashAnswer <- read.csv('Data/hashAnswer.csv')
View(hashAnswer)
library(dbplyr)
library(dplyr)
library(RMySQL)
library(tidyr)
library(MASS)
library(ggplot2)
library(hash)
hashAnswer <- hashAnswer %>% subset(select=-c(X))
?unique
hashAnswer$questionId %>% unique() %>% summarise(n())
hashAnswer$questionId %>% unique()
hashAnswer$questionId %>% unique() ->temp
glimpse(hashAnswer)
summary(hashAnswer)
ans.glm <- glm(correct~fsfat+hsta,family = "binomial",data=hashAnswer)
summary(ans.glm)
?glm
ans.glm <- glm(correct~fsfat+hsta,family = binomial(link="logit"),data=hashAnswer)
summary(ans.glm)
ggplot(hashAnswer,aes(x=fsfat,y=correct))+geom_point()
ans.glm2 <- glm(correct~fsfat*hsta,family = binomial(link="logit"),data=hashAnswer)
ans.glm3 <- glm(correct~fsfat,family = binomial(link="logit"),data=hashAnswer)
ggplot(data=cbind(hashAnswer,pred=predict(ans.glm)),aes(x=fsfat,y=correct))+
geom_point()+
geom_line(aes(y=pred))
ans.glm <- glm(correct~fsfat,family = binomial(link="logit"),data=hashAnswer)
ans.glm2 <- glm(correct~fsfat+hsta,family = binomial(link="logit"),data=hashAnswer)
#Teiknum fyrst aðeins gögninn með
ggplot(data=cbind(hashAnswer,pred=predict(ans.glm)),aes(x=fsfat,y=correct))+
geom_point()+
geom_line(aes(y=pred))
#Teiknum fyrst aðeins gögninn með
ggplot(data=cbind(hashAnswer,pred=predict(ans.glm,type = "link")),aes(x=fsfat,y=correct))+
geom_point()+
geom_line(aes(y=pred))
#Teiknum fyrst aðeins gögninn með
ggplot(data=cbind(hashAnswer,pred=predict.glm(ans.glm,type = "link")),aes(x=fsfat,y=correct))+
geom_point()+
geom_line(aes(y=pred))
#Teiknum fyrst aðeins gögninn með
ggplot(data=cbind(hashAnswer,pred=predict.glm(ans.glm,type = "respond")),aes(x=fsfat,y=correct))+
geom_point()+
geom_line(aes(y=pred))
#Teiknum fyrst aðeins gögninn með
ggplot(data=cbind(hashAnswer,pred=predict.glm(ans.glm,type = "respondse")),aes(x=fsfat,y=correct))+
geom_point()+
geom_line(aes(y=pred))
#Teiknum fyrst aðeins gögninn með
ggplot(data=cbind(hashAnswer,pred=predict.glm(ans.glm,type = "response")),aes(x=fsfat,y=correct))+
geom_point()+
geom_line(aes(y=pred))
ggplot(data=cbind(hashAnswer,pred=predict.glm(ans.glm2,type = "response")),aes(x=fsfat,y=correct,color=hsta))+
geom_point()+
geom_line(aes(y=pred))
hashAnswer$hsta <- hashAnswer$hsta%>%as.character()
ans.glm <- glm(correct~fsfat,family = binomial(link="logit"),data=hashAnswer)
ans.glm2 <- glm(correct~fsfat+hsta,family = binomial(link="logit"),data=hashAnswer)
ans.glm3 <- glm(correct~fsfat*hsta,family = binomial(link="logit"),data=hashAnswer)
ggplot(data=cbind(hashAnswer,pred=predict.glm(ans.glm2,type = "response")),aes(x=fsfat,y=correct,color=hsta))+
geom_point()+
geom_line(aes(y=pred))
ggplot(data=cbind(hashAnswer,pred=predict.glm(ans.glm3,type = "response")),aes(x=fsfat,y=correct))+
geom_point()+
geom_line(aes(y=pred))
ggplot(data=cbind(hashAnswer,pred=predict.glm(ans.glm3,type = "response")),aes(x=fsfat,y=correct, color=hsta))+
geom_point()+
geom_line(aes(y=pred))
summary(ans.glm)
summary(ans.glm2)
summary(ans.glm3)
ggplot(data=cbind(hashAnswer,pred=predict.glm(ans.glm3,type = "response")),aes(x=fsfat,y=correct, color=hsta))+
geom_point()+
geom_line(aes(y=pred))+
xlim(0,100)
ggplot(data=cbind(hashAnswer,pred=predict.glm(ans.glm3,type = "response")),aes(x=fsfat,y=correct, color=hsta))+
geom_point()+
geom_line(aes(y=pred))+
xlim(0,50)
ggplot(data=cbind(hashAnswer,pred=predict.glm(ans.glm3,type = "response")),aes(x=fsfat,y=correct, color=hsta))+
geom_point()+
geom_line(aes(y=pred))+
xlim(0,80)
ggplot(data=cbind(hashAnswer,pred=predict.glm(ans.glm3,type = "response")),aes(x=fsfat,y=correct, color=hsta))+
geom_point()+
geom_smooth()+
geom_line(aes(y=pred))+
xlim(0,80)
library(dbplyr)
library(dplyr)
library(RMySQL)
library(tidyr)
library(MASS)
library(ggplot2)
library(hash)
hashAnswer <- read.csv('Data/hashAnswer.csv')
hashAnswer <- hashAnswer %>% subset(select=-c(X))
hashAnswer$hsta <- hashAnswer$hsta%>%as.character()
ggplot(data=hashAnswer)+geom_bar(aes(x=hsta))
ggplot(data=hashAnswer)+geom_bar(aes(x=fsfat))
ggplot(data=hashAnswer)+geom_bar(aes(x=hsta,y=stat(prop)))
ggplot(data=hashAnswer)+geom_bar(aes(x=hsta,y=stat(prop),group=1))
library(dbplyr)
library(dplyr)
library(RMySQL)
library(tidyr)
library(MASS)
library(ggplot2)
library(hash)
ggplot(data=hashAnswer)+geom_point(aes(x=fsfat,y=correct),position = "jitter")
